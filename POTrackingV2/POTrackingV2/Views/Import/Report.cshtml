@using PagedList;
@using PagedList.Mvc;
@model IPagedList<POTrackingV2.Models.PO>
@{
    ViewBag.Title = "Report Delivery Date";
    int number = 1;
}

@Scripts.Render("~/bundles/jquery")
<h2>Report Delivery Date</h2>

<div class="filter-row">
    @using (Html.BeginForm("Report", "Import", null, FormMethod.Get, new { @class = "" }))
    {
        <div class="filter-form-container form-inline">
            <input id="searchPONumber" name="searchPONumber" list="data-list-po" type="text" class="form-control form-control-lg filter-search with-icon pr-2 mr-md-4 mb-1" placeholder="Search No. PO" autocomplete="off" value="@ViewBag.CurrentSearchPONumber" />
            <datalist id="data-list-po"></datalist>
            <input id="searchVendorName" name="searchVendorName" list="data-list-vendor" type="text" class="form-control form-control-lg filter-search with-icon pr-2 mr-md-4 mb-1" placeholder="Search Vendor Name" autocomplete="off" value="@ViewBag.CurrentSearchVendorName" />
            <datalist id="data-list-vendor"></datalist>
            <input id="searchMaterial" name="searchMaterial" list="data-list-material" type="text" class="form-control form-control-lg filter-search with-icon pr-2 mr-md-4 mb-1" placeholder="Search Material" autocomplete="off" value="@ViewBag.CurrentSearchMaterial" />
            <datalist id="data-list-material"></datalist>
            <button type="submit" class="btn btn-info mr-3">Find</button>
            @Html.ActionLink("Clear", "Report", null, new { @class = "btn btn-info mr-3" })
            @Html.ActionLink("Download", "DownloadReport", "Import", new { searchPONumber = ViewBag.CurrentSearchPONumber, searchVendorName = ViewBag.CurrentSearchVendorName, searchMaterial = ViewBag.CurrentSearchMaterial }, new { @class = "btn btn-info" })
        </div>
    }
</div>

<table id="tableReport" class="table table-striped table-bordered" style="width:100%">
    <thead>
        <tr>
            <th>
                PO Number
            </th>
            <th>
                Item Number
            </th>
            <th>
                Material
            </th>
            <th>
                Description
            </th>
            <th>
                Quantity
            </th>
            <th>
                Delivery Date
            </th>
            <th>
                Vendor
            </th>
            <th>
                Estimated Time Arrival
            </th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Count() > 0)
        {
            foreach (var po in Model)
            {
                List<POTrackingV2.Models.PurchasingDocumentItem> purchasingDocumentItems = po.PurchasingDocumentItems.OrderBy(x => x.ItemNumber).ToList();

                foreach (var item in purchasingDocumentItems)
                {
                    if (item.PurchasingDocumentItemHistories.Any(z => z.POHistoryCategory.ToLower() == "t"))
                    {
                        continue;
                    }

                    if (!String.IsNullOrEmpty(item.Material) && item.ActiveStage != null && item.ActiveStage != "0" && item.IsClosed != "L" && item.IsClosed != "LX")
                    {
                        <tr style="background-color:white;">
                            <td>
                                @po.Number
                            </td>
                            <td>
                                @item.ItemNumber
                            </td>
                            <td>
                                @item.Material
                            </td>
                            <td>
                                @{
                                    string description = "-";

                                    if (item.Description != null)
                                    {
                                        description = item.Description;
                                    }
                                }
                                @description
                            </td>
                            <td>
                                @item.Quantity
                            </td>
                            <td>
                                @{
                                    string deliveryDate = "-";

                                    if (item.DeliveryDate != null)
                                    {
                                        deliveryDate = item.DeliveryDate.GetValueOrDefault().ToString("dd/MM/yyyy");
                                    }
                                }
                                @deliveryDate
                            </td>
                            <td>
                                @po.Vendor.Name
                            </td>
                            <td>
                                @{
                                    string estimatedTimeArrival = "-";

                                    if (item.HasETAHistory)
                                    {
                                        if (item.HasShipment)
                                        {
                                            if (item.FirstShipment.ATADate.HasValue)
                                            {
                                                estimatedTimeArrival = item.FirstShipment.ATADate.GetValueOrDefault().AddDays(7).ToString("dd/MM/yyyy");
                                            }
                                        }
                                        else
                                        {
                                            if (item.LastETAHistory.ETADate.HasValue)
                                            {
                                                estimatedTimeArrival = item.LastETAHistory.ETADateView;
                                            }
                                            else if (item.FirstETAHistory.ETADate.HasValue)
                                            {
                                                estimatedTimeArrival = item.FirstETAHistory.ETADateView;
                                            }
                                        }
                                    }
                                    else if (item.ConfirmedDate.HasValue)
                                    {
                                        estimatedTimeArrival = item.ConfirmedDate.GetValueOrDefault().ToString("dd/MM/yyyy");
                                    }
                                }
                                @estimatedTimeArrival
                            </td>
                        </tr>
                    }
                }

            }
        }
        else
        {
            <tr style="background-color:white;">
                <td>
                    No Data
                </td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
            </tr>
        }
    </tbody>
</table>
   Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Report",
new { page, searchPONumber = ViewBag.CurrentSearchPONumber, searchVendorName = ViewBag.CurrentSearchVendorName, searchMaterial = ViewBag.CurrentSearchMaterial }))

<script type="text/javascript">
    //$(document).ready(function () {
    //    $("#tableReport").DataTable();
    //});
</script>