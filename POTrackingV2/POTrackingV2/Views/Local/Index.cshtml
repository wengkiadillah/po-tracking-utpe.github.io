@model PagedList.IPagedList<POTrackingV2.Models.PO>
@*model POTracking.ViewModels.IndexLocalViewModel*@
@using PagedList.Mvc;
@{
    ViewBag.Title = "Local PO tracking";
    var roleID = ViewBag.CurrentRoleID;
    var poSignRow = 1;
    var iisAppName = ViewBag.IISAppName;
    string currentSearchForMaterial = ViewBag.CurrentSearchMaterial;
    string currentSearchPOStatus = ViewBag.CurrentSearchPOStatus;

    @*if (!string.IsNullOrEmpty(currentSearchForMaterial))
        {
            currentSearchForMaterial = currentSearchForMaterial.ToLower();
        }
        else
        {
            currentSearchForMaterial = string.Empty;
        }*@


    if (!string.IsNullOrEmpty(currentSearchPOStatus))
    {
        currentSearchPOStatus = currentSearchPOStatus.ToLower();
    }
    else
    {
        currentSearchPOStatus = string.Empty;
    }
}

@section styles {
    <link href="~/Content/datepicker.min.css" rel="stylesheet" />
}
<h1 class="page-title mb-4" id="rpv-display" style="display:none"><img src="~/Images/logo-patria.png" alt="logo-patria"></h1>
<h1 class="page-title">
    <span class="page-subtitle" style="margin-left:0px;">PO Tracking Local System</span><span class="page-subtitle"><a href="@Url.Action("History", "Local")">History</a></span>
</h1>
<div class="filter-row mb-2">
    @using (Html.BeginForm("Index", "Local", null, FormMethod.Get, new { @class = "" }))
    {
        <div class="filter-form-container form-inline">
            <input id="searchPONumber" name="searchPONumber" list="data-list-ponumber" type="text" class="form-control form-control-lg filter-search with-icon pr-2 mr-md-4 mb-1" placeholder="Search PO Number" autocomplete="off" value="@ViewBag.CurrentSearchPONumber" />
            <datalist id="data-list-ponumber"></datalist>
            @if (roleID == "procurement" || roleID == "administrator")
            {
                <input id="searchVendorName" name="searchVendorName" list="data-list-vendorname" type="text" class="form-control form-control-lg filter-search with-icon pr-2 mr-md-4 mb-1" placeholder="Search Vendor Name" autocomplete="off" value="@ViewBag.CurrentSearchVendorName" />
                <datalist id="data-list-vendorname"></datalist>
            }
            <input id="searchMaterial" name="searchMaterial" list="data-list-material" type="text" class="form-control form-control-lg filter-search with-icon pr-2 mr-md-4 mb-1" placeholder="Search Material" autocomplete="off" value="@ViewBag.CurrentSearchMaterial" />
            <datalist id="data-list-material"></datalist>
            @if (ViewBag.IsHeadProcurement)
            {
                <input id="searchUserProcurement" name="searchUserProcurement" list="data-list-userprocurement" type="text" class="form-control form-control-lg filter-search with-icon pr-2 mr-md-4 mb-1" placeholder="Search Procurement" autocomplete="off" value="@ViewBag.CurrentSearchUserProcurement" />
                <datalist id="data-list-userprocurement"></datalist>
            }
        </div>

        <div class="filter-row subtier mt-0 mb-1">
            <div class="filter-form-container form-inline">
                <div class="form-group mr-0 ml-0 mb-1">
                    <label for="startPODate">PO Date</label>
                    <input name="searchStartPODate" type="text" class="form-control form-control-lg form-date with-icon" id="startPODate"
                           placeholder="dd/mm/yyyy" value="@ViewBag.CurrentStartPODate" autocomplete="off" />
                    <i class="far fa-calendar-alt form-type-icon"></i>
                </div>
                <div class="form-group mb-1">
                    <label for="endPODate">to</label>
                    <input name="searchEndPODate" type="text" class="form-control form-control-lg form-date with-icon" id="endPODate"
                           placeholder="dd/mm/yyyy" value="@ViewBag.CurrentEndPODate" autocomplete="off" />
                    <i class="far fa-calendar-alt form-type-icon"></i>
                </div>
                <input id="searchPOStatus" name="searchPOStatus" type="hidden" value="@ViewBag.CurrentSearchPOStatus" />
                <input name="roleID" type="hidden" value="@ViewBag.CurrentRoleID" />
                <button type="submit" class="btn btn-info mr-3">Find</button>
                @Html.ActionLink("Clear", "Index", null, new { @class = "btn btn-info" })
            </div>
        </div>
    }
</div>
<div class="filter-row tier-2 mt-0">

    @if (roleID == "procurement" || roleID == "administrator")
    {
        if (ViewBag.CurrentSearchPOStatus == "negotiated")
        {
            @Html.ActionLink("On Going", "Index", "Local", new { searchPOStatus = "ongoing", searchPONumber = ViewBag.CurrentSearchPONumber, searchVendorName = ViewBag.CurrentSearchVendorName, searchMaterial = ViewBag.CurrentSearchMaterial, searchStartPODate = ViewBag.CurrentStartPODate, searchEndPODate = ViewBag.CurrentEndPODate, page = 1 }, new { @class = "btn btn-info mr-3 mt-1" })

        }
        else if (ViewBag.CurrentSearchPOStatus == "ongoing" || ViewBag.CurrentSearchPOStatus == "")
        {
            @Html.ActionLink("Negotiated Items", "Index", "Local", new { searchPOStatus = "negotiated", searchPONumber = ViewBag.CurrentSearchPONumber, searchVendorName = ViewBag.CurrentSearchVendorName, searchMaterial = ViewBag.CurrentSearchMaterial, searchStartPODate = ViewBag.CurrentStartPODate, searchEndPODate = ViewBag.CurrentEndPODate, page = 1 }, new { @class = "btn btn-info mr-3 mt-1" })
        }
    }
    <form action="/potracking/Local" class="filter-form-container form-inline" method="get" style="visibility:hidden;">
        <div class="form-group mr-4 frmSearch">
            <input id="searchData" name="searchData" list="data-list" type="text" class="form-control form-control-lg filter-search with-icon" placeholder="Search No. PO" autocomplete="off">
            <datalist id="data-list"></datalist>
        </div>
        <div class="form-group mr-0">
            <label for="startPODate">PO Date</label>
            <input name="searchStartPODate" type="text" class="form-control form-control-lg form-date with-icon" id="startPODate" placeholder="dd/mm/yyyy" autocomplete="off">
            <i class="far fa-calendar-alt form-type-icon"></i>
        </div>

    </form>
    <div class="stage-pagination-container">
        <p class="stage-pagination-label mb-0 mr-3">Jump to Stage:</p>
        <ul class="list-unstyled pagination-list mb-0 custom-scrollbar">
            <li class="pagination-list__item" onclick="paginationShow(1)">1</li>
            <li class="pagination-list__item" onclick="paginationShow(2)">2</li>
            <li class="pagination-list__item" onclick="paginationShow(3)">2a</li>
            <li class="pagination-list__item" onclick="paginationShow(4)">3</li>
            <li class="pagination-list__item" onclick="paginationShow(5)">4</li>
            <li class="pagination-list__item" onclick="paginationShow(6)">5</li>
            <li class="pagination-list__item" onclick="paginationShow(7)">6</li>
            <li class="pagination-list__item" onclick="paginationShow(8)">7</li>
            @*<li class="pagination-list__item" onclick="paginationShow(9)">8</li>*@
        </ul>
    </div>
</div>
@foreach (var pO in Model)
{
    var purchasingDocumentItems = pO.PurchasingDocumentItems.Where(x => !String.IsNullOrEmpty(x.Material));
    var pdiCloseConfirmQtynull = pO.PurchasingDocumentItems.Where(s => (s.ConfirmedQuantity == null || s.ConfirmedDate == null) && String.IsNullOrEmpty(s.IsClosed) && s.PurchasingDocumentItemHistories.Count == 0).Select(b => b.ID).Distinct();
    var pdiHistory = purchasingDocumentItems.Where(x => (x.IsClosed == "L") || (x.IsClosed == "LX") || (x.PurchasingDocumentItemHistories.Where(zx => zx.POHistoryCategory != null && zx.POHistoryCategory == "Q").Sum(z => z.GoodsReceiptQuantity) == null) || (x.PurchasingDocumentItemHistoriesParkingDetail.Sum(z => z.GoodsReceiptQuantity ?? 0) >= x.CurrentQuantity)).Select(b => b.ID).Distinct();

    if (purchasingDocumentItems.Count() > 0)
    {
        purchasingDocumentItems = purchasingDocumentItems.Except(purchasingDocumentItems.Where(x => x.ParentID != null && x.ParentID != x.ID));

        //purchasingDocumentItems = purchasingDocumentItems.Except(purchasingDocumentItems.Where(x => x.IsClosed == "L" || x.IsClosed == "LX" || x.IsClosed == "l" || x.IsClosed == "lx" || x.PurchasingDocumentItemHistories.Any(y => y.POHistoryCategory == "Q" || y.POHistoryCategory == "q")));

        //purchasingDocumentItems = purchasingDocumentItems.Except(purchasingDocumentItems.Where(x => x.ActiveStage == "0" && x.IsClosed.ToLower() == "x"));

        if (purchasingDocumentItems.Count() > 0)
        {
            if (!String.IsNullOrEmpty(currentSearchPOStatus))
            {
                if (currentSearchPOStatus == "ongoing")
                {
                    //purchasingDocumentItems = purchasingDocumentItems.Where(y => y.ConfirmedQuantity != null || y.ConfirmedDate != null || pdiCloseConfirmQtynull.Contains(y.ID));
                    purchasingDocumentItems = purchasingDocumentItems.Where(x => ((x.IsClosed != "L" && x.IsClosed != "LX") && ((x.PurchasingDocumentItemHistories.Where(zx => zx.POHistoryCategory != null && zx.POHistoryCategory.ToLower() == "q").Sum(z => z.GoodsReceiptQuantity) == null) || (x.PurchasingDocumentItemHistoriesParkingDetail.Sum(z => z.GoodsReceiptQuantity ?? 0) < x.CurrentQuantity)) && !pdiCloseConfirmQtynull.Contains(x.ID)));
                }
                else if (currentSearchPOStatus == "newpo")
                {
                    purchasingDocumentItems = purchasingDocumentItems.Where(y => (y.ActiveStage == null || y.ActiveStage == "0") && String.IsNullOrEmpty(y.IsClosed) && y.PurchasingDocumentItemHistories.Count == 0);
                    //purchasingDocumentItems = purchasingDocumentItems.Except(purchasingDocumentItems.Where(x => x.IsClosed != null && (x.IsClosed.ToLower() == "x" || x.IsClosed.ToLower() == "l" || x.IsClosed.ToLower() == "lx")));
                }
                else if (roleID == "procurement" || roleID == "administrator")
                {
                    if (currentSearchPOStatus == "negotiated")
                    {
                        purchasingDocumentItems = purchasingDocumentItems.Where(y => y.ActiveStage == "1" && (y.ConfirmedQuantity != y.Quantity || y.ConfirmedDate != y.DeliveryDate));
                    }
                    else
                    {
                        purchasingDocumentItems = purchasingDocumentItems.Where(y => y.ActiveStage != null && y.ActiveStage != "0");
                    }
                }
            }
            else
            {
                //purchasingDocumentItems = purchasingDocumentItems.Except(purchasingDocumentItems.Where(x => x.IsClosed != null && ((x.IsClosed.ToLower().Contains("x") && x.PurchasingDocumentItemHistories.Any(y => y.GoodsReceiptQuantity != null && y.POHistoryCategory.ToLower() == "q")) || x.IsClosed.ToLower() == "l")));
                //purchasingDocumentItems = purchasingDocumentItems.Except(purchasingDocumentItems.Where(x => ((x.IsClosed.ToLower().Contains("x") && x.PurchasingDocumentItemHistoriesParkingDetail.Sum(z => z.GoodsReceiptQuantity ?? 0) >= x.CurrentQuantity))));
                purchasingDocumentItems = purchasingDocumentItems.Where(x => (x.IsClosed != "X" && x.IsClosed != "L" && x.IsClosed != "LX" && !pdiHistory.Contains(x.ID)) ||
                 ((x.IsClosed != "L" && x.IsClosed != "LX") && ((x.PurchasingDocumentItemHistories.Where(zx => zx.POHistoryCategory != null && zx.POHistoryCategory.ToLower() == "q").Sum(z => z.GoodsReceiptQuantity) == null) || (x.PurchasingDocumentItemHistoriesParkingDetail.Sum(z => z.GoodsReceiptQuantity ?? 0) < x.CurrentQuantity)))
                 //|| ((x.IsClosed == "L") || (x.IsClosed.ToLower().Contains("x") && x.PurchasingDocumentItemHistoriesParkingDetail.Sum(z => z.GoodsReceiptQuantity ?? 0) >= x.CurrentQuantity))
                 );
            }

            if (!string.IsNullOrEmpty(currentSearchForMaterial))
            {
                purchasingDocumentItems = purchasingDocumentItems.Where(x => x.Material.ToLower().Contains(currentSearchForMaterial.ToLower()) || x.Description.ToLower().Contains(currentSearchForMaterial.ToLower()) || x.MaterialVendor.ToLower().Contains(currentSearchForMaterial.ToLower()));
            }
        }
    }

    //if (purchasingDocumentItems.Count() < 1)
    //{
    //    continue;
    //}

    purchasingDocumentItems = purchasingDocumentItems.OrderBy(x => x.ItemNumber);

    var purchasingDocumentItemChilds = pO.PurchasingDocumentItems.Where(x => x.ParentID != null);

    var poItemStickyProcurementWidth = "";
    var poItemScrollableProcurementWidth = "";

    if (roleID == "procurement" || roleID == "administrator")
    {
        poItemStickyProcurementWidth = "po-item-sticky-procurement";
        poItemScrollableProcurementWidth = "po-item-scrollable-procurement";
    }

    <ul class="list-unstyled po-list">
        <li class="po-item-container">
            @* Kalo dia bukan Procurement class po-item-sticky-procurement dihapus *@
            <div>
                <div class="po-item-section po-item-sticky @poItemStickyProcurementWidth">
                    @* Kalo dia bukan Procurement class po-item-sticky-procurement dihapus *@
                    <div class="po-item-section-header">
                        <i onclick="poItemCollapse($(this))" class="fas fa-angle-up po-item-section-header__icon arrow"></i>
                        <div class="po-item-section-header-text">
                            <span class="po-item-section-header-text__label">No. PO</span>
                            <span>@pO.Number</span>
                        </div>
                        <div class="po-item-section-header-text">
                            <span class="po-item-section-header-text__label">PO Date</span>
                            <span>@pO.Date.ToString("dd/MM/yyyy")</span>
                        </div>
                        <i class="fas fa-info-circle po-item-section-header__icon info"></i>
                        <div class="pop-up-notification">
                            <table>
                                <tr>
                                    <td class="secondary-text">No. PO</td>
                                    <td>&nbsp;</td>
                                    <td>@pO.Number</td>
                                </tr>
                                <tr>
                                    <td class="secondary-text">PO Date</td>
                                    <td>&nbsp;</td>
                                    <td>@pO.Date.ToString("dd/MM/yyyy")</td>
                                </tr>
                                <tr>
                                    <td class="secondary-text">Vendor</td>
                                    <td>&nbsp;</td>
                                    @if (pO.Vendor != null)
                                    {
                                        <td>@pO.Vendor.Name</td>
                                    }
                                    else
                                    {
                                        <td>Vendor not in Database</td>
                                    }
                                </tr>
                                <tr>
                                    <td class="secondary-text">Vendor Code</td>
                                    <td>&nbsp;</td>
                                    @if (pO.Vendor != null)
                                    {
                                        <td>@pO.Vendor.Code</td>
                                    }
                                    else
                                    {
                                        <td>Vendor not in Database</td>
                                    }
                                </tr>
                                <tr>
                                    <td class="secondary-text">PO Creator</td>
                                    <td>&nbsp;</td>
                                    <td>@pO.PurchaseOrderCreator</td>
                                </tr>
                                <tr>
                                    <td class="secondary-text">Release PO Date</td>
                                    <td>&nbsp;</td>
                                    @if (pO.ReleaseDate != null)
                                    {
                                        <td>@pO.ReleaseDate.Value.ToString("dd/MM/yyyy")</td>
                                    }
                                    else
                                    {
                                        <td>Not found in Database</td>
                                    }
                                </tr>
                            </table>
                        </div>
                    </div>
                    <div class="po-item-section-body">
                        <div class="po-item-data-header">
                            <span class="po-item-data-header__text item-id">Item ID</span>
                            <span class="po-item-data-header__text material">Material</span>
                            @if (roleID == "procurement" || roleID == "administrator")
                            {
                                <span class="po-item-data-header__text material">Material Vendor</span>
                            }
                            <span class="po-item-data-header__text description">Item Description</span>
                            <span class="po-item-data-header__text po-progress">Progress</span>
                        </div>
                        @{
                            var row = 1;

                        }
                        @foreach (var purchasingDocumentItem in purchasingDocumentItems)
                        {
                            var childPurchasingDocumentItems = pO.PurchasingDocumentItems.Where(x => x.ParentID == purchasingDocumentItem.ID && x.ID != purchasingDocumentItem.ID);
                            var childRow = 1;

                            var materialUTPE = purchasingDocumentItem.Material;
                            var materialVendor = "-";

                            if (!string.IsNullOrEmpty(purchasingDocumentItem.MaterialVendor))
                            {
                                materialVendor = purchasingDocumentItem.MaterialVendor;

                                if (roleID == "vendor")
                                {
                                    materialUTPE = purchasingDocumentItem.MaterialVendor;
                                }
                            }
                            <div class="po-item-data-content row-@row">
                                <div class="po-item-data-content__outer">
                                    <span class="po-item-data-header__column item-id">@purchasingDocumentItem.ItemNumber</span>
                                    <span class="po-item-data-header__column material">@materialUTPE</span>
                                    @if (roleID == "procurement" || roleID == "administrator")
                                    {
                                        <span class="po-item-data-header__column material">@materialVendor</span>
                                    }
                                    <span class="po-item-data-header__column description">@purchasingDocumentItem.Description</span>
                                    @if (purchasingDocumentItem.ConfirmedItem != false)
                                    {
                                        <div class="po-item-data-header__column po-progress">
                                            <div class="donut-chart" data-donutty data-radius="12" data-thickness="4" data-padding="0"
                                                 data-value="@purchasingDocumentItem.DonutProgressLocal" data-round="false" data-color="#567FEF" data-transition="all 2s cubic-bezier(0.17, 2.39, 0.36, 0.9)"></div>
                                            <div><span class="mark-donut" id="activeStagePo-@poSignRow">@purchasingDocumentItem.ActiveStageView</span><span class="secondary-text">/7</span></div>
                                        </div>
                                    }
                                    else
                                    {
                                        int donutProgress = 100;

                                        <div class="po-item-data-header__column po-progress">
                                            <div class="donut-chart" data-donutty data-radius="12" data-thickness="4" data-padding="0"
                                                 data-value="@donutProgress" data-round="false" data-color="#8b0000" data-transition="all 2s cubic-bezier(0.17, 2.39, 0.36, 0.9)"></div>
                                            <div>Cancel</div>
                                        </div>
                                    }

                                </div>
                                <div class="po-item-data-content__child">
                                    @if (childPurchasingDocumentItems.Count() > 0)
                                    {
                                        foreach (var childPurchasingDocumentItem in childPurchasingDocumentItems)
                                        {
                                            materialUTPE = childPurchasingDocumentItem.Material;
                                            materialVendor = "-";

                                            if (!string.IsNullOrEmpty(childPurchasingDocumentItem.MaterialVendor))
                                            {
                                                materialVendor = childPurchasingDocumentItem.MaterialVendor;

                                                if (roleID == "vendor")
                                                {
                                                    materialUTPE = childPurchasingDocumentItem.MaterialVendor;
                                                }
                                            }
                                            <div class="po-item-data-content row-@row-@childRow" row="@row" child="@childRow">
                                                <span class="po-item-data-header__column item-id" style="visibility:hidden">@childPurchasingDocumentItem.ItemNumber</span>
                                                <span class="po-item-data-header__column material" style="visibility:hidden">@materialUTPE</span>
                                                @*  IF Procurement Show *@
                                                @if (roleID == "procurement" || roleID == "administrator")
                                                {
                                                    <span class="po-item-data-header__column material" style="visibility:hidden">@materialVendor</span>
                                                }
                                                @*  IF Procurement Show *@
                                                <span class="po-item-data-header__column description" style="visibility:hidden">@childPurchasingDocumentItem.Description</span>
                                                @if (childPurchasingDocumentItem.ConfirmedItem != false)
                                                {
                                                    <div class="po-item-data-header__column po-progress">
                                                        <div class="donut-chart" data-donutty data-radius="12" data-thickness="4" data-padding="0"
                                                             data-value="@childPurchasingDocumentItem.DonutProgressLocal" data-round="false" data-color="#567FEF" data-transition="all 2s cubic-bezier(0.17, 2.39, 0.36, 0.9)"></div>
                                                        <div><span class="mark-donut" id="activeStagePo-@poSignRow">@childPurchasingDocumentItem.ActiveStageView</span><span class="secondary-text">/7</span></div>
                                                    </div>
                                                }
                                                else
                                                {
                                                    int donutProgress = 100;

                                                    <div class="po-item-data-header__column po-progress">
                                                        <div class="donut-chart" data-donutty data-radius="12" data-thickness="4" data-padding="0"
                                                             data-value="@donutProgress" data-round="false" data-color="#8b0000" data-transition="all 2s cubic-bezier(0.17, 2.39, 0.36, 0.9)"></div>
                                                        <div>Cancel</div>
                                                    </div>
                                                }
                                            </div>
                                            childRow++;
                                        }
                                    }
                                </div>
                            </div>

                            row++;
                        }
                    </div>
                </div>
            </div>
            @* Remove po-item-scrollable-procurement if not procurement *@
            <div class="custom-scrollbar po-item-scrollable po-sign-row-@poSignRow @poItemScrollableProcurementWidth">
                @* Remove po-item-scrollable-procurement if not procurement *@
                <div class="po-item-section information">
                    <div class="po-item-section-header justify-content-center">
                        <p class="mb-0">Information</p>
                    </div>
                    <div class="po-item-section-body">
                        <div class="po-item-data-header">
                            <span class="po-item-data-header__text quantity">Qty</span>
                            @if (roleID != "others")
                            {
                                <span class="po-item-data-header__text currency">Curr</span>
                                <span class="po-item-data-header__text price">Price</span>
                            }
                            <span class="po-item-data-header__text delivery">Delivery Date</span>
                        </div>
                        @{
                            var rowInformation = 1;
                        }
                        @foreach (var purchasingDocumentItem in purchasingDocumentItems)
                        {
                            <div class="po-item-data-content row-@rowInformation">
                                <div class="po-item-data-content__outer">
                                    <span class="po-item-data-header__column quantity">@purchasingDocumentItem.Quantity.ToString()</span>
                                    @if (roleID != "others")
                                    {
                                        <span class="po-item-data-header__column currency">@purchasingDocumentItem.Currency</span>
                                        <span class="po-item-data-header__column price">@purchasingDocumentItem.NetPriceView</span>
                                    }
                                    <span class="po-item-data-header__column delivery">@purchasingDocumentItem.DeliveryDate.GetValueOrDefault().ToString("dd/MM/yyyy")</span>
                                </div>
                            </div>

                            rowInformation++;

                        }
                    </div>
                </div>
                <!--
                    start stage 1

                -->
                <div class="po-item-section stage-1">
                    <div class="po-item-section-header stage-checkbox-header">
                        @{
                            var st1CheckboxAll = "st1-checkbox-all";
                            var st1AcceptAll = "st1-accept-all-po";
                            var disabledCheckboxAll = "";
                            var disabledAcceptAll = "";

                            if (roleID == "procurement" || roleID == "administrator")
                            {
                                st1CheckboxAll = "st1-checkbox-all-proc";
                                st1AcceptAll = "st1-accept-all-po-proc";
                            }

                            if (roleID == "administrator" || roleID == "others")
                            {
                                disabledCheckboxAll = "disabled";
                                disabledAcceptAll = "disabled";
                            }
                        }
                        <div>
                            <label class="checkbox-custom__label mr-0">
                                <input class="checkbox-custom @st1CheckboxAll" type="checkbox" @disabledCheckboxAll>
                                <span class="checkmark"></span>
                            </label>
                        </div>
                        <div>
                            <p class="mb-0">Stage 1</p>
                        </div>
                        <div>
                            <input class="btn btn-positive confirm-all-po @st1AcceptAll" type="submit" value="Save All" @disabledAcceptAll />
                        </div>
                    </div>
                    <div class="po-item-section-body">
                        <div class="po-item-data-header">
                            <span class="po-item-data-header__text confirm-delivery-date">Confirm Arrival Date</span>
                            <span class="po-item-data-header__text delivery-option">Delivery Method</span>
                            <span class="po-item-data-header__text quantity-form">Quantity</span>
                        </div>
                        @{
                            var rowStage1 = 1;
                        }
                        @foreach (var purchasingDocumentItem in purchasingDocumentItems)
                        {
                            var childPurchasingDocumentItems = pO.PurchasingDocumentItems.Where(x => x.ParentID == purchasingDocumentItem.ID && x.ID != purchasingDocumentItem.ID);
                            var childRowStage1 = 1;
                            var latestConfirmedDate = purchasingDocumentItem.DeliveryDate.GetValueOrDefault().ToString("dd/MM/yyyy");
                            var latestConfirmedQuantity = purchasingDocumentItem.Quantity;
                            var confirmedDate = "";

                            if (purchasingDocumentItem.ConfirmedDate.HasValue)
                            {
                                latestConfirmedDate = pO.PurchasingDocumentItems.Where(x => x.ID == purchasingDocumentItem.ID || x.ParentID == purchasingDocumentItem.ID).OrderByDescending(x => x.ConfirmedDate).FirstOrDefault().ConfirmedDateView;

                                confirmedDate = purchasingDocumentItem.ConfirmedDateView;
                            }

                            if (purchasingDocumentItem.ConfirmedQuantity.HasValue)
                            {
                                latestConfirmedQuantity = purchasingDocumentItem.ConfirmedQuantity.GetValueOrDefault();
                            }

                            //if (childPurchasingDocumentItems.Count() > 0)
                            //{
                            //    latestConfirmedDate = childPurchasingDocumentItems.OrderBy(x => x.ConfirmedDate).LastOrDefault().ConfirmedDateView;
                            //}
                            //else
                            //{
                            //    latestConfirmedDate = purchasingDocumentItem.ConfirmedDateView;
                            //}
                            var st1ItemID = "st1-pd-item-id";
                            var st1ItemIDInner = "st1-pd-item-id-inner";
                            var st1ItemQuantity = "st1-pd-item-max-qty";
                            var st1ItemDeliveryDate = "st1-pd-item-delivery-date";
                            var st1ItemIsEdit = "st1-pd-item-is-edit";
                            var st1CheckboxItem = "st1-checkbox-item";
                            var st1ConfirmedDate = "st1-confirmed-date";
                            var st1DeliveryMethod = "st1-delivery-method";
                            var st1PartialConfirmQuantity = "st1-partial-confirm-qty";
                            var st1PartialDate = "st1-partial-date";
                            var st1AcceptItem = "st1-accept-item";
                            var st1CancelItem = "st1-cancel-item";
                            var st1AddRow = "st1-add-row";
                            var st1DelRow = "st1-del-row";
                            var st1EditRow = "st1-edit-row";


                            if (roleID == "procurement" || roleID == "administrator")
                            {
                                st1ItemID = "st1-pd-item-id-proc";
                                st1ItemIDInner = "st1-pd-item-id-inner-proc";
                                st1ItemQuantity = "st1-pd-item-max-qty-proc";
                                st1ItemDeliveryDate = "st1-pd-item-delivery-date-proc";
                                st1ItemIsEdit = "st1-pd-item-is-edit-proc";
                                st1CheckboxItem = "st1-checkbox-item-proc";
                                st1ConfirmedDate = "st1-confirmed-date-proc";
                                st1DeliveryMethod = "st1-delivery-method-proc";
                                st1PartialConfirmQuantity = "st1-partial-confirm-qty-proc";
                                st1PartialDate = "st1-partial-date-proc";
                                st1AcceptItem = "st1-accept-item-proc";
                                st1CancelItem = "st1-cancel-item-proc";
                                st1AddRow = "st1-add-row-proc";
                                st1DelRow = "st1-del-row-proc";
                                st1EditRow = "st1-edit-row-proc";
                            }

                            var disabledInputCheckbox = "";
                            var disabledInputConfirmedDate = "disabled";
                            var disabledInputDeliveryMethod = "disabled";
                            var disabledInputQuantity = "disabled";
                            var disabledInputDate = "disabled";
                            var disabledButtonConfirm = "disabled";
                            var disabledButtonCancel = "disabled";
                            var selectedButtonConfirm = "";
                            var selectedButtonCancel = "";
                            var hideChildButton = "style=visibility:hidden";
                            var hideButtonEdit = "style=visibility:hidden";
                            var hideCheckbox = "style=visibility:hidden";
                            var isChecked = "";
                            var isPartial = "";

                            if (roleID == "procurement" || roleID == "administrator")
                            {
                                hideCheckbox = "";
                                hideChildButton = "";
                                disabledInputCheckbox = "disabled";

                                if (purchasingDocumentItem.ConfirmedDate.HasValue || purchasingDocumentItem.ConfirmedQuantity.HasValue)
                                {
                                    disabledInputCheckbox = "";
                                }

                                if (purchasingDocumentItem.ConfirmedItem == true)
                                {

                                    disabledInputCheckbox = "disabled";
                                    selectedButtonConfirm = "selected";
                                    isChecked = "checked";
                                    //hideButtonEdit = "";


                                    if (purchasingDocumentItem.ActiveStage == "2a" || (Convert.ToInt32(purchasingDocumentItem.ActiveStage) > 3 || Convert.ToInt32(purchasingDocumentItem.ActiveStage) == 3))
                                    {
                                        hideButtonEdit = "style=visibility:hidden";
                                    }
                                    else
                                    {
                                        hideButtonEdit = "";
                                    }
                                }
                                else if (purchasingDocumentItem.ConfirmedItem == false)
                                {
                                    disabledInputCheckbox = "disabled";
                                    selectedButtonCancel = "selected-negative";
                                    isChecked = "checked";
                                    //hideButtonEdit = "";

                                    if ((purchasingDocumentItem.ActiveStage == "2a" || (Convert.ToInt32(purchasingDocumentItem.ActiveStage) > 3 || Convert.ToInt32(purchasingDocumentItem.ActiveStage) == 3)) && purchasingDocumentItem.ProformaInvoiceDocument == null)
                                    {
                                        hideButtonEdit = "style=visibility:hidden";
                                    }
                                    else
                                    {
                                        hideButtonEdit = "";
                                    }
                                }
                            }
                            else
                            {
                                if (purchasingDocumentItem.ConfirmedItem == false)
                                {
                                    disabledInputCheckbox = "disabled";
                                    selectedButtonCancel = "selected-negative";
                                    hideButtonEdit = "";

                                }
                                else if (purchasingDocumentItem.ConfirmedQuantity.HasValue)
                                {
                                    disabledInputCheckbox = "disabled";
                                    isChecked = "checked";
                                    selectedButtonConfirm = "selected";
                                    hideButtonEdit = "";
                                }
                                else if (purchasingDocumentItem.ConfirmedQuantity == null && purchasingDocumentItem.IsClosed == "X")
                                {
                                    disabledInputCheckbox = "disabled";
                                }

                                if (purchasingDocumentItem.ActiveStage != "1" || childPurchasingDocumentItems.Any(x => x.ActiveStage != "1"))
                                {
                                    if (purchasingDocumentItem.ActiveStage == "2a")
                                    {
                                        hideButtonEdit = "style=visibility:hidden";
                                    }
                                    else if (Convert.ToInt32(purchasingDocumentItem.ActiveStage) >= 2 && purchasingDocumentItem.HasETAHistory)
                                    {
                                        hideButtonEdit = "style=visibility:hidden";
                                    }
                                    else if (purchasingDocumentItem.Quantity == purchasingDocumentItem.ConfirmedQuantity.GetValueOrDefault())
                                    {
                                        hideButtonEdit = "";
                                    }
                                    else
                                    {
                                        hideButtonEdit = "style=visibility:hidden";
                                    }
                                }

                            }

                            if (roleID == "administrator" || roleID == "others")
                            {
                                disabledInputCheckbox = "disabled";
                                disabledInputConfirmedDate = "disabled";
                                disabledInputDeliveryMethod = "disabled";
                                disabledInputQuantity = "disabled";
                                disabledInputDate = "disabled";
                                disabledButtonConfirm = "disabled";
                                disabledButtonCancel = "disabled";
                            }

                            if (childPurchasingDocumentItems.Count() > 0)
                            {
                                isPartial = "selected";
                            }
                            <form class="po-form-item-st1">
                                <div class="po-item-data-content row-@rowStage1" row="@rowStage1">
                                    <div class="po-item-data-content__outer">
                                        <div class="po-item-data-header__column confirm-delivery-date">
                                            <div class="form-inline">
                                                <input type="hidden" class="@st1ItemID" value="@purchasingDocumentItem.ID">
                                                <input type="hidden" class="@st1ItemQuantity" value="@purchasingDocumentItem.Quantity">
                                                <input type="hidden" class="@st1ItemDeliveryDate" value="@purchasingDocumentItem.DeliveryDate.GetValueOrDefault().ToString("dd/MM/yyyy")">
                                                <input type="hidden" class="@st1ItemIsEdit" value="false">
                                                <div class="input-group">
                                                    <label class="checkbox-custom__label">
                                                        <input class="checkbox-custom @st1CheckboxItem" @isChecked type="checkbox" @disabledInputCheckbox>
                                                        <span class="checkmark"></span>
                                                    </label>
                                                    <div class="form-group">
                                                        <input type="text" class="form-control form-date with-icon @st1ConfirmedDate" required autofocus pattern="^([0-2][0-9]|(3)[0-1])(\/)(((0)[0-9])|((1)[0-2]))(\/)\d{4}$" maxlength="10" placeholder="dd/mm/yyyy" @disabledInputConfirmedDate value="@latestConfirmedDate">
                                                        <i class="fas fa-calendar-alt form-type-icon"></i>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="po-item-data-header__column delivery-option">
                                            <div class="form-group">
                                                <select class="form-control @st1DeliveryMethod" @disabledInputDeliveryMethod>
                                                    <option value="full">Full</option>
                                                    <option value="partial" @isPartial>Partial</option>
                                                </select>
                                            </div>
                                        </div>
                                        <div class="po-item-data-header__column quantity-form">
                                            <div class="form-group">
                                                <input type="number" class="form-control @st1PartialConfirmQuantity" autofocus required pattern="[0-9]" min="1" placeholder="Qty available @purchasingDocumentItem.Quantity" value="@latestConfirmedQuantity" @disabledInputQuantity>
                                            </div>
                                        </div>
                                        <div class="po-item-data-header__column">
                                            <div class="form-inline">
                                                <input type="hidden" class="@st1ItemIDInner" value="@purchasingDocumentItem.ID">
                                                <div class="input-group mr-2">
                                                    <input type="text" class="form-control form-date with-icon @st1PartialDate" required autofocus pattern="^([0-2][0-9]|(3)[0-1])(\/)(((0)[0-9])|((1)[0-2]))(\/)\d{4}$" maxlength="10" maxdate="@confirmedDate" placeholder="dd/mm/yyyy" value="@confirmedDate" @disabledInputDate>
                                                    <i class="fas fa-calendar-alt form-type-icon icon-prepend"></i>
                                                    <div class="input-group-prepend">
                                                        <button type="submit" class="btn btn-positive @st1AcceptItem @selectedButtonConfirm" @disabledButtonConfirm>Yes</button>
                                                    </div>
                                                </div>
                                                <button type="button" class="btn btn-negative @st1CancelItem @selectedButtonCancel" @disabledButtonCancel>No</button>
                                            </div>
                                        </div>
                                        <div class="po-item-data-header__column">
                                            <div class="form-inline">
                                                <a href="#" class="btn-icon @st1AddRow" style="visibility:hidden"><i class="fas fa-plus-circle"></i></a>
                                                <a href="#" class="btn-icon @st1DelRow" style="visibility:hidden"><i class="fas fa-minus-circle"></i></a>
                                                <a href="#" class="btn-icon @st1EditRow" @hideButtonEdit><i class="far fa-edit"></i></a>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="po-item-data-content__child">
                                        @if (childPurchasingDocumentItems.Count() > 0)
                                        {
                                            foreach (var childPurchasingDocumentItem in childPurchasingDocumentItems)
                                            {
                                                latestConfirmedDate = purchasingDocumentItem.DeliveryDate.GetValueOrDefault().ToString("dd/MM/yyyy");
                                                latestConfirmedQuantity = childPurchasingDocumentItem.Quantity;
                                                confirmedDate = "";

                                                if (childPurchasingDocumentItem.ConfirmedDate.HasValue)
                                                {
                                                    latestConfirmedDate = pO.PurchasingDocumentItems.Where(x => x.ID == purchasingDocumentItem.ID || x.ParentID == purchasingDocumentItem.ID).OrderByDescending(x => x.ConfirmedDate).FirstOrDefault().ConfirmedDateView;

                                                    confirmedDate = childPurchasingDocumentItem.ConfirmedDateView;
                                                }

                                                if (childPurchasingDocumentItem.ConfirmedQuantity.HasValue)
                                                {
                                                    latestConfirmedQuantity = childPurchasingDocumentItem.ConfirmedQuantity.GetValueOrDefault();
                                                }

                                                disabledInputCheckbox = "";
                                                disabledInputConfirmedDate = "disabled";
                                                disabledInputDeliveryMethod = "disabled";
                                                disabledInputQuantity = "disabled";
                                                disabledInputDate = "disabled";
                                                disabledButtonConfirm = "disabled";
                                                disabledButtonCancel = "disabled";
                                                selectedButtonConfirm = "";
                                                selectedButtonCancel = "";
                                                hideButtonEdit = "style=visibility:hidden";
                                                isChecked = "";
                                                isPartial = "";

                                                if (roleID == "procurement" || roleID == "administrator")
                                                {
                                                    disabledInputCheckbox = "disabled";

                                                    if (purchasingDocumentItem.ConfirmedDate.HasValue || purchasingDocumentItem.ConfirmedQuantity.HasValue)
                                                    {
                                                        disabledInputCheckbox = "";
                                                    }

                                                    if (childPurchasingDocumentItem.ConfirmedItem == true)
                                                    {
                                                        disabledInputCheckbox = "disabled";
                                                        selectedButtonConfirm = "selected";
                                                        isChecked = "checked";
                                                        //hideButtonEdit = "";

                                                        if (childPurchasingDocumentItem.ActiveStage == "2a" || (Convert.ToInt32(childPurchasingDocumentItem.ActiveStage) > 3 || Convert.ToInt32(childPurchasingDocumentItem.ActiveStage) == 3))
                                                        {
                                                            hideButtonEdit = "style=visibility:hidden";
                                                        }
                                                        else
                                                        {
                                                            hideButtonEdit = "";
                                                        }
                                                    }
                                                    else if (childPurchasingDocumentItem.ConfirmedItem == false)
                                                    {
                                                        disabledInputCheckbox = "disabled";
                                                        selectedButtonCancel = "selected-negative";
                                                        isChecked = "checked";
                                                        //hideButtonEdit = "";

                                                        if ((childPurchasingDocumentItem.ActiveStage == "2a" || (Convert.ToInt32(childPurchasingDocumentItem.ActiveStage) > 3 || Convert.ToInt32(childPurchasingDocumentItem.ActiveStage) == 3)) && childPurchasingDocumentItem.ProformaInvoiceDocument == null)
                                                        {
                                                            hideButtonEdit = "style=visibility:hidden";
                                                        }
                                                        else
                                                        {
                                                            hideButtonEdit = "";
                                                        }
                                                    }
                                                }
                                                else
                                                {
                                                    if (childPurchasingDocumentItem.ConfirmedItem == false)
                                                    {
                                                        disabledInputCheckbox = "disabled";
                                                        selectedButtonCancel = "selected-negative";
                                                        //hideButtonEdit = "";

                                                    }
                                                    else if (childPurchasingDocumentItem.ConfirmedQuantity.HasValue)
                                                    {
                                                        disabledInputCheckbox = "disabled";
                                                        isChecked = "checked";
                                                        selectedButtonConfirm = "selected";
                                                        //hideButtonEdit = "";
                                                    }

                                                    if (childPurchasingDocumentItem.ActiveStage != "1")
                                                    {
                                                        hideButtonEdit = "style=visibility:hidden";
                                                    }
                                                }

                                                if (roleID == "administrator" || roleID == "others")
                                                {
                                                    disabledInputCheckbox = "disabled";
                                                    disabledInputConfirmedDate = "disabled";
                                                    disabledInputDeliveryMethod = "disabled";
                                                    disabledInputQuantity = "disabled";
                                                    disabledInputDate = "disabled";
                                                    disabledButtonConfirm = "disabled";
                                                    disabledButtonCancel = "disabled";
                                                }

                                                <div class="po-item-data-content row-@rowStage1-@childRowStage1" row="@rowStage1" child="@childRowStage1">
                                                    <div class="po-item-data-header__column confirm-delivery-date" @hideCheckbox>
                                                        <div class="form-inline">
                                                            <div class="input-group">
                                                                <label class="checkbox-custom__label">
                                                                    <input class="checkbox-custom @st1CheckboxItem" @isChecked type="checkbox" @disabledInputCheckbox>
                                                                    <span class="checkmark"></span>
                                                                </label>
                                                                <div class="form-group" style="visibility:hidden">
                                                                    <input type="text" class="form-control form-date with-icon" required autofocus pattern="^([0-2][0-9]|(3)[0-1])(\/)(((0)[0-9])|((1)[0-2]))(\/)\d{4}$" maxlength="10" maxdate="@latestConfirmedDate" placeholder="dd/mm/yyyy" disabled>
                                                                    <i class="fas fa-calendar-alt form-type-icon"></i>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="po-item-data-header__column delivery-option" style="visibility:hidden">
                                                        <div class="form-inline">
                                                            <div class="form-group">
                                                                <select class="form-control" disabled>
                                                                    <option value="full">Full</option>
                                                                    <option value="partial">Partial</option>
                                                                </select>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="po-item-data-header__column quantity-form">
                                                        <div class="form-inline">
                                                            <input type="number" class="form-control @st1PartialConfirmQuantity" autofocus required pattern="[0-9]" min="1" placeholder="Qty available @purchasingDocumentItem.Quantity" value="@latestConfirmedQuantity" @disabledInputQuantity>
                                                        </div>
                                                    </div>
                                                    <div class="po-item-data-header__column">
                                                        <div class="form-inline">
                                                            <input type="hidden" class="@st1ItemIDInner" value="@childPurchasingDocumentItem.ID">
                                                            <div class="input-group mr-2">
                                                                <input type="text" class="form-control form-date with-icon @st1PartialDate" required autofocus pattern="^([0-2][0-9]|(3)[0-1])(\/)(((0)[0-9])|((1)[0-2]))(\/)\d{4}$" maxlength="10" maxdate="@confirmedDate" placeholder="dd/mm/yyyy" value="@confirmedDate" @disabledInputDate>
                                                                <i class="fas fa-calendar-alt form-type-icon icon-prepend" @hideChildButton></i>
                                                                <div class="input-group-prepend" @hideChildButton>
                                                                    <button type="submit" class="btn btn-positive @st1AcceptItem @selectedButtonConfirm" @disabledButtonConfirm>Yes</button>
                                                                </div>
                                                            </div>
                                                            <button type="button" class="btn btn-negative @st1CancelItem @selectedButtonCancel" @disabledButtonCancel @hideChildButton>No</button>
                                                        </div>
                                                    </div>
                                                    <div class="po-item-data-header__column">
                                                        <div class="form-inline">
                                                            <a href="#" class="btn-icon" style="visibility:hidden"><i class="fas fa-plus-circle"></i></a>
                                                            <a href="#" class="btn-icon" style="visibility:hidden"><i class="fas fa-minus-circle"></i></a>
                                                            <a href="#" class="btn-icon @st1EditRow" @hideButtonEdit><i class="far fa-edit"></i></a>
                                                        </div>
                                                    </div>
                                                </div>
                                                childRowStage1++;
                                            }
                                        }
                                    </div>
                                </div>
                            </form>
                            rowStage1++;
                        }
                    </div>
                </div>
                <!--
                        END STAGE 1
                -->
                <div class="po-item-section stage-2">
                    @if (roleID == "procurement" || roleID == "administrator")
                    {
                        <div class="po-item-section-header stage-checkbox-header">
                            <div>
                                <label class="checkbox-custom__label mr-0">
                                    <input class="checkbox-custom st2-proc-checkbox-all" type="checkbox" @disabledCheckboxAll>
                                    <span class="checkmark"></span>
                                </label>
                            </div>
                            <div><p class="mb-0">Stage 2</p></div>
                            <div>
                                <input class="btn btn-positive st2-proc-accept-first-eta-all" type="submit" value="Save All" @disabledAcceptAll />
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="po-item-section-header stage-checkbox-header">
                            <div>
                                <label class="checkbox-custom__label mr-0">
                                    <input class="checkbox-custom st2-checkbox-all" type="checkbox" @disabledCheckboxAll>
                                    <span class="checkmark"></span>
                                </label>
                            </div>
                            <div><p class="mb-0">Stage 2</p></div>
                            <div>
                                <input class="btn btn-positive st2-confirm-first-eta-all" type="submit" value="Save All" @disabledAcceptAll />
                            </div>
                        </div>
                    }
                    <div class="po-item-section-body">
                        <div class="po-item-data-header">
                            <span class="po-item-data-header__text stage2-confirm-eta">Confirm ETA</span>
                        </div>
                        @{
                            var rowStage2 = 1;
                        }
                        @foreach (var purchasingDocumentItem in purchasingDocumentItems)
                        {

                            var childPurchasingDocumentItems = pO.PurchasingDocumentItems.Where(x => x.ParentID == purchasingDocumentItem.ID && x.ID != purchasingDocumentItem.ID);
                            var childRowStage2 = 1;

                            var st2CheckboxItem = "st2-checkbox-item";
                            var st2ItemId = "st2-pd-item-id";
                            var st2FirstEtaDate = "st2-first-eta-date";
                            var st2ConfirmFirstEta = "st2-confirm-first-eta";
                            var st2EditRow = "edit-row-st2";
                            var st2ProcAcceptFirstEta = "";
                            var st2ProcDeclineFirstEta = "";

                            if (roleID == "procurement" || roleID == "administrator")
                            {
                                st2CheckboxItem = "st2-proc-checkbox-item";
                                st2ItemId = "st2-proc-pd-item-id";
                                st2FirstEtaDate = "st2-proc-first-eta-date";
                                st2ConfirmFirstEta = "st2-proc-confirm-first-eta";
                                st2ProcAcceptFirstEta = "st2-proc-accept-first-eta";
                                st2ProcDeclineFirstEta = "st2-proc-decline-first-eta";
                                st2EditRow = "edit-row-st2-proc";
                            }

                            var selectedButtonAccept = "";
                            var selectedButtonDecline = "";
                            var disabledInputCheckbox = "disabled";
                            var disabledInputFirstEtaDate = "disabled";
                            var disabledButtonConfirmEtaDate = "disabled";
                            var disabledButtonAccept = "disabled";
                            var disabledButtonDecline = "disabled";
                            var selectedButtonConfirm = "";
                            var visibilityCheckbox = "";
                            var hideButtonEdit = "style=visibility:hidden";
                            var hiddenButtonConfirmEtaDate = "";
                            var hiddenButtonAcceptDecline = "hidden";
                            var isChecked = "";

                            var valueInputFirstEtaDate = "";

                            if (purchasingDocumentItem.HasETAHistory)
                            {
                                valueInputFirstEtaDate = purchasingDocumentItem.FirstETAHistory.ETADateView;
                            }
                            else if (purchasingDocumentItem.ConfirmedItem == true)
                            {
                                valueInputFirstEtaDate = purchasingDocumentItem.ConfirmedDateView;
                            }

                            if (roleID == "procurement" || roleID == "administrator")
                            {
                                hiddenButtonConfirmEtaDate = "hidden";
                                hiddenButtonAcceptDecline = "";

                                if (purchasingDocumentItem.ActiveStage == "2" && purchasingDocumentItem.HasETAHistory && purchasingDocumentItem.FirstETAHistory.AcceptedByProcurement == null)
                                {
                                    disabledInputCheckbox = "";
                                }
                                else if (purchasingDocumentItem.FirstETAHistory.AcceptedByProcurement == true)
                                {
                                    isChecked = "checked";
                                    selectedButtonAccept = "selected";

                                    if (purchasingDocumentItem.ActiveStage == "2a")
                                    {
                                        hideButtonEdit = "style=visibility:display";
                                    }
                                }
                                else if (purchasingDocumentItem.FirstETAHistory.AcceptedByProcurement == false)
                                {
                                    isChecked = "checked";
                                    selectedButtonDecline = "selected-negative";

                                    if (purchasingDocumentItem.ActiveStage == "2")
                                    {
                                        hideButtonEdit = "style=visibility:display";
                                    }
                                }

                            }
                            else
                            {
                                hiddenButtonConfirmEtaDate = "";
                                hiddenButtonAcceptDecline = "hidden";

                                if (purchasingDocumentItem.ActiveStage == "2" && !purchasingDocumentItem.HasETAHistory)
                                {

                                    disabledInputCheckbox = "";

                                }
                                else if (purchasingDocumentItem.HasETAHistory)
                                {
                                    isChecked = "checked";
                                    selectedButtonConfirm = "selected";

                                    if ((purchasingDocumentItem.ActiveStage == "2" || purchasingDocumentItem.ActiveStage == "2a") && purchasingDocumentItem.ApproveProformaInvoiceDocument == null)
                                    {
                                        hideButtonEdit = "style=visibility:display";
                                    }
                                }
                            }

                            if (!purchasingDocumentItem.IsTwentyFivePercent)
                            {
                                disabledInputCheckbox = "disabled";
                            }

                            if (roleID == "administrator" || roleID == "others")
                            {
                                disabledInputCheckbox = "disabled";
                                disabledInputFirstEtaDate = "disabled";
                                disabledButtonConfirmEtaDate = "disabled";
                                disabledButtonAccept = "disabled";
                                disabledButtonDecline = "disabled";
                            }

                            <div class="po-item-data-content row-@rowStage2" row="@rowStage2" style="display:block;">
                                <div class="po-item-data-content__outer">
                                    <form class="d-flex po-form-item-st2">
                                        <div class="po-item-data-header__column stage2-confirm-eta">
                                            <div class="form-inline">
                                                <label class="checkbox-custom__label" @visibilityCheckbox>
                                                    <input class="checkbox-custom @st2CheckboxItem" type="checkbox" @isChecked @disabledInputCheckbox>
                                                    <span class="checkmark"></span>
                                                </label>
                                                <div class="form-group mr-2">
                                                    <input type="hidden" class="@st2ItemId" value="@purchasingDocumentItem.ID">
                                                    <input type="text" class="form-control form-date with-icon @st2FirstEtaDate" value="@valueInputFirstEtaDate" required autofocus pattern="^([0-2][0-9]|(3)[0-1])(\/)(((0)[0-9])|((1)[0-2]))(\/)\d{4}$" maxlength="10" mindate="@purchasingDocumentItem.ConfirmedDateView" placeholder="dd/mm/yyyy" autocomplete="off" @disabledInputFirstEtaDate>
                                                    <i class="far fa-calendar-alt form-type-icon"></i>
                                                </div>
                                                <button class="btn btn-positive @st2ConfirmFirstEta @selectedButtonConfirm" @disabledButtonConfirmEtaDate @hiddenButtonConfirmEtaDate>Save</button>
                                                <button class="btn btn-positive @st2ProcAcceptFirstEta @selectedButtonAccept mr-2" @disabledButtonAccept @hiddenButtonAcceptDecline>Yes</button>
                                                <button class="btn btn-negative @st2ProcDeclineFirstEta @selectedButtonDecline" @disabledButtonDecline @hiddenButtonAcceptDecline>No</button>
                                            </div>
                                        </div>
                                        <a href="#" class="btn-icon @st2EditRow ml-1" @hideButtonEdit><i class="far fa-edit"></i></a>
                                    </form>
                                </div>
                                <div class="po-item-data-content__child">
                                    @if (childPurchasingDocumentItems.Count() > 0)
                                    {
                                        foreach (var childPurchasingDocumentItem in childPurchasingDocumentItems)
                                        {

                                            selectedButtonAccept = "";
                                            selectedButtonDecline = "";
                                            disabledInputCheckbox = "disabled";
                                            disabledInputFirstEtaDate = "disabled";
                                            disabledButtonConfirmEtaDate = "disabled";
                                            disabledButtonAccept = "disabled";
                                            disabledButtonDecline = "disabled";
                                            selectedButtonConfirm = "";
                                            visibilityCheckbox = "";
                                            hideButtonEdit = "style=visibility:hidden";
                                            hiddenButtonConfirmEtaDate = "";
                                            hiddenButtonAcceptDecline = "hidden";
                                            isChecked = "";

                                            valueInputFirstEtaDate = "";

                                            if (childPurchasingDocumentItem.HasETAHistory)
                                            {
                                                valueInputFirstEtaDate = childPurchasingDocumentItem.FirstETAHistory.ETADateView;
                                            }
                                            else if (childPurchasingDocumentItem.ConfirmedItem == true)
                                            {
                                                valueInputFirstEtaDate = childPurchasingDocumentItem.ConfirmedDateView;
                                            }

                                            if (roleID == "procurement" || roleID == "administrator")
                                            {
                                                hiddenButtonConfirmEtaDate = "hidden";
                                                hiddenButtonAcceptDecline = "";

                                                if (childPurchasingDocumentItem.ActiveStage == "2" && childPurchasingDocumentItem.HasETAHistory && childPurchasingDocumentItem.FirstETAHistory.AcceptedByProcurement == null)
                                                {
                                                    disabledInputCheckbox = "";
                                                }
                                                else if (childPurchasingDocumentItem.FirstETAHistory.AcceptedByProcurement == true)
                                                {
                                                    isChecked = "checked";
                                                    selectedButtonAccept = "selected";

                                                    if (childPurchasingDocumentItem.ActiveStage == "2a")
                                                    {
                                                        hideButtonEdit = "style=visibility:display";
                                                    }
                                                }
                                                else if (childPurchasingDocumentItem.FirstETAHistory.AcceptedByProcurement == false)
                                                {
                                                    isChecked = "checked";
                                                    selectedButtonDecline = "selected-negative";

                                                    if (childPurchasingDocumentItem.ActiveStage == "2")
                                                    {
                                                        hideButtonEdit = "style=visibility:display";
                                                    }
                                                }

                                            }
                                            else
                                            {
                                                hiddenButtonConfirmEtaDate = "";
                                                hiddenButtonAcceptDecline = "hidden";

                                                if (childPurchasingDocumentItem.ActiveStage == "2" && !childPurchasingDocumentItem.HasETAHistory)
                                                {
                                                    disabledInputCheckbox = "";
                                                }
                                                else if (childPurchasingDocumentItem.HasETAHistory)
                                                {
                                                    isChecked = "checked";
                                                    selectedButtonConfirm = "selected";

                                                    if ((childPurchasingDocumentItem.ActiveStage == "2" || childPurchasingDocumentItem.ActiveStage == "2a") && childPurchasingDocumentItem.ApproveProformaInvoiceDocument == null)
                                                    {
                                                        hideButtonEdit = "style=visibility:display";
                                                    }
                                                }
                                            }

                                            if (!childPurchasingDocumentItem.IsTwentyFivePercent)
                                            {
                                                disabledInputCheckbox = "disabled";
                                            }

                                            if (roleID == "administrator" || roleID == "others")
                                            {
                                                disabledInputCheckbox = "disabled";
                                                disabledInputFirstEtaDate = "disabled";
                                                disabledButtonConfirmEtaDate = "disabled";
                                                disabledButtonAccept = "disabled";
                                                disabledButtonDecline = "disabled";
                                            }

                                            <div class="po-item-data-content row-@rowStage2-@childRowStage2" row="@rowStage2" child="@childRowStage2">
                                                <form class="d-flex po-form-item-st2">
                                                    <div class="po-item-data-header__column stage2-confirm-eta">
                                                        <div class="form-inline">
                                                            <label class="checkbox-custom__label" @visibilityCheckbox>
                                                                <input class="checkbox-custom @st2CheckboxItem" type="checkbox" @isChecked @disabledInputCheckbox>
                                                                <span class="checkmark"></span>
                                                            </label>
                                                            <div class="form-group mr-2">
                                                                <input type="hidden" class="@st2ItemId" value="@childPurchasingDocumentItem.ID">
                                                                <input type="text" class="form-control form-date with-icon @st2FirstEtaDate" value="@valueInputFirstEtaDate" required autofocus pattern="^([0-2][0-9]|(3)[0-1])(\/)(((0)[0-9])|((1)[0-2]))(\/)\d{4}$" maxlength="10" mindate="@childPurchasingDocumentItem.ConfirmedDateView" placeholder="dd/mm/yyyy" autocomplete="off" @disabledInputFirstEtaDate>
                                                                <i class="far fa-calendar-alt form-type-icon"></i>
                                                            </div>
                                                            <button class="btn btn-positive @st2ConfirmFirstEta @selectedButtonConfirm" @disabledButtonConfirmEtaDate @hiddenButtonConfirmEtaDate>Save</button>
                                                            <button class="btn btn-positive @st2ProcAcceptFirstEta @selectedButtonAccept mr-2" @disabledButtonAccept @hiddenButtonAcceptDecline>Yes</button>
                                                            <button class="btn btn-negative @st2ProcDeclineFirstEta @selectedButtonDecline" @disabledButtonDecline @hiddenButtonAcceptDecline>No</button>
                                                        </div>
                                                    </div>
                                                    <a href="#" class="btn-icon @st2EditRow ml-1" @hideButtonEdit><i class="far fa-edit"></i></a>
                                                </form>
                                            </div>
                                            childRowStage2++;
                                        }
                                    }
                                </div>
                            </div>
                            rowStage2++;
                        }
                    </div>
                </div>
                <div class="po-item-section stage-3">
                    @{
                        var st2aCheckboxAll = "st2a-checkbox-all";
                        var st2aConfirmAll = "st2a-ask-first-eta-all";
                        var st2aSkipAll = "st2a-skip-first-eta-all";
                        var st2aUploadAll = "";
                        var disabledst2aConfirmAll = "";
                        var disabledst2aSkipAll = "";
                        var disabledst2aUploadAll = "disabled";
                        var hiddenst2aConfirmAll = "";
                        var hiddenst2aSkipAll = "";
                        var hiddenst2aUploadAll = "hidden";

                        if (roleID == "vendor")
                        {

                            //st2aCheckboxAll = "";
                            st2aConfirmAll = "";
                            st2aSkipAll = "";
                            st2aUploadAll = "st2a-upload-first-eta-all";
                            disabledst2aConfirmAll = "disabled";
                            disabledst2aSkipAll = "disabled";
                            disabledst2aUploadAll = "";
                            hiddenst2aConfirmAll = "hidden";
                            hiddenst2aSkipAll = "hidden";
                            hiddenst2aUploadAll = "";
                        }

                        if (roleID == "administrator" || roleID == "others")
                        {
                            disabledst2aConfirmAll = "disabled";
                            disabledst2aSkipAll = "disabled";
                        }

                    }

                    <div class="po-item-section-header stage-checkbox-header">
                        <div>
                            <label class="checkbox-custom__label mr-0">
                                <input class="checkbox-custom @st2aCheckboxAll" type="checkbox" @disabledCheckboxAll>
                                <span class="checkmark"></span>
                            </label>
                        </div>
                        <div><p class="mb-0">Stage 2a</p></div>
                        <div>
                            @*<input class="btn btn-positive @st2aUploadAll" type="submit" value="Upload All" @disabledst2aUploadAll @hiddenst2aUploadAll />*@
                            <input class="btn btn-positive @st2aConfirmAll" type="submit" value="Need All" @disabledst2aConfirmAll @hiddenst2aConfirmAll />
                            <input class="btn btn-negative @st2aSkipAll" type="submit" value="Skip All" @disabledst2aSkipAll @hiddenst2aSkipAll />
                        </div>
                    </div>
                    <div class="po-item-section-body">
                        <div class="po-item-data-header">
                            <span class="po-item-data-header__text">Upload Proforma Invoice</span>
                        </div>
                        @{
                            var rowStage2a = 1;
                        }
                        @foreach (var purchasingDocumentItem in purchasingDocumentItems)
                        {
                            var childPurchasingDocumentItems = pO.PurchasingDocumentItems.Where(x => x.ParentID == purchasingDocumentItem.ID && x.ID != purchasingDocumentItem.ID);
                            var childRowStage2a = 1;

                            var st2aCheckboxItem = "st2a-checkbox-item";
                            var st2aItemId = "st2a-item-id";
                            var st2aFileProformaInvoice = "st2a-file-proforma-invoice";
                            var st2aUploadProformaInvoice = "st2a-upload-proforma-invoice";
                            var st2aRemoveFileProformaInvoice = "st2a-remove-proforma-invoice";
                            var st2aDownloadProforma = "st2a-download-proforma";
                            var st2aAskProforma = "st2a-ask-proforma";
                            var st2aSkipProforma = "st2a-skip-proforma";

                            var disabledInputCheckbox = "disabled";
                            var disabledFileProformaInvoice = "disabled";
                            var disabledUploadProformaInvoice = "disabled";
                            var disabledSkipProforma = "disabled";
                            var disabledAskProforma = "disabled";
                            var selectedSkipProforma = "";
                            var selectedAskProforma = "";
                            var hiddenInputDiv = "";
                            var hiddenUploadedDiv = "hidden";
                            var hiddenUploadProforma = "hidden";
                            var hiddenAskProforma = "hidden";
                            var hiddenSkipProforma = "hidden";
                            var downloadPath = "";
                            var isChecked = "";

                            if (roleID == "procurement" || roleID == "administrator")
                            {
                                st2aFileProformaInvoice = "";
                                st2aUploadProformaInvoice = "";

                                hiddenAskProforma = "";
                                hiddenSkipProforma = "";
                                st2aFileProformaInvoice = "";

                                if (purchasingDocumentItem.ProformaInvoiceDocument != null)
                                {
                                    hiddenAskProforma = "hidden";
                                    hiddenSkipProforma = "hidden";
                                    hiddenInputDiv = "hidden";
                                    hiddenUploadedDiv = "";
                                    downloadPath = Path.Combine("/", iisAppName, "Files/Local/ProformaInvoice", purchasingDocumentItem.ProformaInvoiceDocument);
                                }
                                else if (purchasingDocumentItem.ApproveProformaInvoiceDocument == null && purchasingDocumentItem.ActiveStage == "2a")
                                {
                                    disabledInputCheckbox = "";
                                }
                                else if (purchasingDocumentItem.ApproveProformaInvoiceDocument == true)
                                {
                                    disabledAskProforma = "disabled";
                                    disabledSkipProforma = "disabled";
                                    selectedAskProforma = "selected";
                                    isChecked = "checked";
                                }
                                else if (purchasingDocumentItem.ApproveProformaInvoiceDocument == false)
                                {
                                    disabledAskProforma = "disabled";
                                    disabledSkipProforma = "disabled";
                                    selectedSkipProforma = "selected-negative";
                                    isChecked = "checked";
                                }
                            }
                            else
                            {
                                hiddenAskProforma = "hidden";
                                hiddenSkipProforma = "hidden";
                                hiddenUploadProforma = "";

                                if (purchasingDocumentItem.ProformaInvoiceDocument != null)
                                {
                                    hiddenInputDiv = "hidden";
                                    hiddenUploadedDiv = "";
                                    downloadPath = Path.Combine("/", iisAppName, "Files/Local/ProformaInvoice", purchasingDocumentItem.ProformaInvoiceDocument);
                                    isChecked = "checked";
                                    disabledInputCheckbox = "disabled";
                                }
                                else if (purchasingDocumentItem.ApproveProformaInvoiceDocument == null)
                                {
                                    disabledAskProforma = "disabled";
                                    disabledSkipProforma = "disabled";
                                }
                                else if (purchasingDocumentItem.ApproveProformaInvoiceDocument == true)
                                {
                                    disabledAskProforma = "disabled";
                                    disabledSkipProforma = "disabled";
                                    selectedAskProforma = "selected";
                                    disabledInputCheckbox = "";
                                }
                                else if (purchasingDocumentItem.ApproveProformaInvoiceDocument == false)
                                {
                                    disabledAskProforma = "disabled";
                                    disabledSkipProforma = "disabled";
                                    selectedSkipProforma = "selected-negative";
                                }
                            }

                            if (roleID == "administrator" || roleID == "others")
                            {
                                disabledInputCheckbox = "disabled";
                                disabledFileProformaInvoice = "disabled";
                                disabledUploadProformaInvoice = "disabled";
                                disabledSkipProforma = "disabled";
                                disabledAskProforma = "disabled";
                            }

                            <div class="po-item-data-content row-@rowStage2a">
                                <div class="po-item-data-content__outer">
                                    <form class="po-form-item-st2a">
                                        <div class="po-item-data-header__column">
                                            <div class="form-inline" @hiddenInputDiv>
                                                <label class="checkbox-custom__label">
                                                    <input class="checkbox-custom @st2aCheckboxItem" type="checkbox" @isChecked @disabledInputCheckbox>
                                                    <span class="checkmark"></span>
                                                </label>
                                                <div class="form-group mr-2">
                                                    <input type="hidden" class="@st2aItemId" value="@purchasingDocumentItem.ID">
                                                    <input type="file" id="file" class="form-control with-icon @st2aFileProformaInvoice" @disabledFileProformaInvoice>
                                                    <i class="fas fa-paperclip form-type-icon"></i>
                                                </div>
                                                <button class="btn btn-positive @st2aUploadProformaInvoice mr-2" @hiddenUploadProforma @disabledUploadProformaInvoice>Save</button>
                                                <button class="btn btn-positive @st2aAskProforma @selectedAskProforma mr-2" @hiddenAskProforma @disabledAskProforma>Need</button>
                                                <button class="btn btn-negative @st2aSkipProforma @selectedSkipProforma" @hiddenSkipProforma @disabledSkipProforma>Skip</button>
                                            </div>
                                            <div class="form-inline" @hiddenUploadedDiv>
                                                <div class="form-group mr-2">
                                                    <p class="mt-2 mb-0">
                                                        <a class="@st2aDownloadProforma" href="@downloadPath">Proforma Invoice</a> uploaded<i class="fas fa-check-circle primary ml-2"></i>
                                                        @if (roleID == "vendor" && (purchasingDocumentItem.ConfirmReceivedPaymentDate == null && (purchasingDocumentItem.ActiveStage == "2a" || Convert.ToInt32(purchasingDocumentItem.ActiveStage) < 4)))
                                                        {
                                                            <a href="#" class="danger-link @st2aRemoveFileProformaInvoice">Remove?</a>
                                                        }
                                                    </p>
                                                </div>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                                <div class="po-item-data-content__child">
                                    @if (childPurchasingDocumentItems.Count() > 0)
                                    {
                                        foreach (var childPurchasingDocumentItem in childPurchasingDocumentItems)
                                        {

                                            disabledInputCheckbox = "disabled";
                                            disabledFileProformaInvoice = "disabled";
                                            disabledUploadProformaInvoice = "disabled";
                                            disabledSkipProforma = "disabled";
                                            disabledAskProforma = "disabled";
                                            selectedSkipProforma = "";
                                            selectedAskProforma = "";
                                            hiddenInputDiv = "";
                                            hiddenUploadedDiv = "hidden";
                                            hiddenUploadProforma = "hidden";
                                            hiddenAskProforma = "hidden";
                                            hiddenSkipProforma = "hidden";
                                            downloadPath = "";
                                            isChecked = "";



                                            if (roleID == "procurement" || roleID == "administrator")
                                            {
                                                st2aFileProformaInvoice = "";
                                                st2aUploadProformaInvoice = "";

                                                hiddenAskProforma = "";
                                                hiddenSkipProforma = "";

                                                if (childPurchasingDocumentItem.ProformaInvoiceDocument != null)
                                                {
                                                    hiddenAskProforma = "hidden";
                                                    hiddenSkipProforma = "hidden";
                                                    hiddenInputDiv = "hidden";
                                                    hiddenUploadedDiv = "";
                                                    downloadPath = Path.Combine("/", iisAppName, "Files/Local/ProformaInvoice", childPurchasingDocumentItem.ProformaInvoiceDocument);
                                                }
                                                else if (childPurchasingDocumentItem.ApproveProformaInvoiceDocument == null && childPurchasingDocumentItem.ActiveStage == "2a")
                                                {
                                                    disabledInputCheckbox = "";
                                                }
                                                else if (childPurchasingDocumentItem.ApproveProformaInvoiceDocument == true)
                                                {
                                                    disabledAskProforma = "disabled";
                                                    disabledSkipProforma = "disabled";
                                                    selectedAskProforma = "selected";
                                                    isChecked = "checked";
                                                }
                                                else if (childPurchasingDocumentItem.ApproveProformaInvoiceDocument == false)
                                                {
                                                    disabledAskProforma = "disabled";
                                                    disabledSkipProforma = "disabled";
                                                    selectedSkipProforma = "selected-negative";
                                                    isChecked = "checked";
                                                }
                                            }
                                            else
                                            {
                                                hiddenAskProforma = "hidden";
                                                hiddenSkipProforma = "hidden";
                                                hiddenUploadProforma = "";

                                                if (childPurchasingDocumentItem.ProformaInvoiceDocument != null)
                                                {
                                                    hiddenInputDiv = "hidden";
                                                    hiddenUploadedDiv = "";
                                                    downloadPath = Path.Combine("/", iisAppName, "Files/Local/ProformaInvoice", childPurchasingDocumentItem.ProformaInvoiceDocument);
                                                    isChecked = "checked";
                                                    disabledInputCheckbox = "disabled";
                                                }
                                                else if (childPurchasingDocumentItem.ApproveProformaInvoiceDocument == null)
                                                {
                                                    disabledAskProforma = "disabled";
                                                    disabledSkipProforma = "disabled";
                                                }
                                                else if (childPurchasingDocumentItem.ApproveProformaInvoiceDocument == true)
                                                {
                                                    disabledAskProforma = "disabled";
                                                    disabledSkipProforma = "disabled";
                                                    selectedAskProforma = "selected";
                                                    disabledInputCheckbox = "";
                                                }
                                                else if (childPurchasingDocumentItem.ApproveProformaInvoiceDocument == false)
                                                {
                                                    disabledAskProforma = "disabled";
                                                    disabledSkipProforma = "disabled";
                                                    selectedSkipProforma = "selected-negative";
                                                }
                                            }

                                            if (roleID == "administrator" || roleID == "others")
                                            {
                                                disabledInputCheckbox = "disabled";
                                                disabledFileProformaInvoice = "disabled";
                                                disabledUploadProformaInvoice = "disabled";
                                                disabledSkipProforma = "disabled";
                                                disabledAskProforma = "disabled";
                                            }

                                            <div class="po-item-data-content row-@rowStage2a-@childRowStage2a" row="@rowStage2a" child="@childRowStage2a">
                                                <form class="po-form-item-st2a">
                                                    <div class="po-item-data-header__column">
                                                        <div class="form-inline" @hiddenInputDiv>
                                                            <label class="checkbox-custom__label">
                                                                <input class="checkbox-custom @st2aCheckboxItem" type="checkbox" @isChecked @disabledInputCheckbox>
                                                                <span class="checkmark"></span>
                                                            </label>
                                                            <div class="form-group mr-2">
                                                                <input type="hidden" class="@st2aItemId" value="@childPurchasingDocumentItem.ID">
                                                                <input type="file" id="file" class="form-control with-icon @st2aFileProformaInvoice" @disabledFileProformaInvoice>
                                                                <i class="fas fa-paperclip form-type-icon"></i>
                                                            </div>
                                                            <button class="btn btn-positive @st2aUploadProformaInvoice mr-2" @hiddenUploadProforma @disabledUploadProformaInvoice>Save</button>
                                                            <button class="btn btn-positive @st2aAskProforma @selectedAskProforma mr-2" @hiddenAskProforma @disabledAskProforma>Need</button>
                                                            <button class="btn btn-negative @st2aSkipProforma @selectedSkipProforma" @hiddenSkipProforma @disabledSkipProforma>Skip</button>
                                                        </div>

                                                        <div class="form-inline" @hiddenUploadedDiv>
                                                            <div class="form-group mr-2">
                                                                <p class="mt-2 mb-0">
                                                                    <a class="@st2aDownloadProforma" href="@downloadPath">Proforma Invoice</a> uploaded<i class="fas fa-check-circle primary ml-2"></i>
                                                                    @if (roleID == "vendor" && (childPurchasingDocumentItem.ConfirmReceivedPaymentDate == null && (childPurchasingDocumentItem.ActiveStage == "2a" || Convert.ToInt32(childPurchasingDocumentItem.ActiveStage) < 4)))
                                                                    {
                                                                        <a href="#" class="danger-link @st2aRemoveFileProformaInvoice">Remove?</a>
                                                                    }
                                                                </p>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </form>
                                            </div>
                                            childRowStage2a++;
                                        }
                                    }
                                </div>
                            </div>
                            rowStage2a++;
                        }
                    </div>
                </div>
                <div class="po-item-section stage-4">
                    @{
                        var st3CheckboxAll = "st3-checkbox-all";
                        var st3ConfirmPaymentAll = "st3-confirm-payment-all";
                        var st3SkipAllComfirmPayment = "st3-skip-all-comfirm-payment";
                        var disabledst3ConfirmPaymentAll = "";
                        var disabledst3SkipAllComfirmPayment = "";
                        var hiddenst3ConfirmPaymentAll = "";
                        var hiddenSkipAllComfirmPayment = "";

                        if (roleID == "vendor")
                        {
                            st3CheckboxAll = "";
                            st3ConfirmPaymentAll = "";
                            st3SkipAllComfirmPayment = "";
                            disabledst3ConfirmPaymentAll = "disabled";
                            disabledst3SkipAllComfirmPayment = "disabled";
                            hiddenst3ConfirmPaymentAll = "hidden";
                            hiddenSkipAllComfirmPayment = "hidden";
                        }

                        if (roleID == "administrator" || roleID == "others")
                        {
                            disabledst3ConfirmPaymentAll = "disabled";
                            disabledst3SkipAllComfirmPayment = "disabled";
                        }
                    }

                    <div class="po-item-section-header stage-checkbox-header">
                        <div>
                            <label class="checkbox-custom__label mr-0">
                                <input class="checkbox-custom @st3CheckboxAll" type="checkbox">
                                <span class="checkmark"></span>
                            </label>
                        </div>
                        <div><p class="mb-0">Stage 3</p></div>
                        <div>
                            <input class="btn btn-positive @st3ConfirmPaymentAll" type="submit" value="Save All" @disabledst3ConfirmPaymentAll @hiddenst3ConfirmPaymentAll />
                            <input class="btn btn-negative @st3SkipAllComfirmPayment" type="submit" value="Skip All" @disabledst3SkipAllComfirmPayment @hiddenSkipAllComfirmPayment />
                        </div>
                    </div>
                    <div class="po-item-section-body">
                        <div class="po-item-data-header">
                            <span class="po-item-data-header__text">Confirm Payment Received</span>
                        </div>
                        @{
                            var rowStage3 = 1;
                        }
                        @foreach (var purchasingDocumentItem in purchasingDocumentItems)
                        {
                            var childPurchasingDocumentItems = pO.PurchasingDocumentItems.Where(x => x.ParentID == purchasingDocumentItem.ID && x.ID != purchasingDocumentItem.ID);
                            var childRowStage3 = 1;

                            var st3CheckboxItem = "st3-checkbox-item";
                            var st3ItemID = "st3-item-id";
                            var st3ItemConfirmPaymentDate = "st3-item-confirm-payment-date";
                            var st3ConfirmPaymentSubmit = "st3-confirm-payment-submit";
                            var st3ConfirmPaymentSkip = "st3-confirm-payment-skip";
                            var st3EditRow = "edit-row-st3";

                            var disabledCheckboxItem = "disabled";
                            var disabledConfirmPaymentDate = "disabled";
                            var disabledConfirmPaymentSubmit = "disabled";
                            var disabledConfirmPaymentSkip = "disabled";
                            var selectedConfirmPaymentSubmit = "";
                            var selectedConfirmPaymentSkip = "";
                            var hiddenEditButton = "style=visibility:hidden";
                            var hiddenConfirmPaymentSkip = "";
                            var hiddenCheckbox = "";
                            var isChecked = "";

                            if (purchasingDocumentItem.ActiveStage == "3")
                            {
                                disabledCheckboxItem = "";
                            }
                            else if (purchasingDocumentItem.ConfirmReceivedPaymentDate.HasValue)
                            {
                                isChecked = "checked";
                                selectedConfirmPaymentSubmit = "selected";

                                if (purchasingDocumentItem.ActiveStage == "4")
                                {
                                    hiddenEditButton = "";
                                }
                            }
                            else if (!purchasingDocumentItem.ConfirmReceivedPaymentDate.HasValue)
                            {
                                if (purchasingDocumentItem.ActiveStageView != "2a")
                                {
                                    if (Convert.ToInt32(purchasingDocumentItem.ActiveStageView) > 3)
                                    {
                                        isChecked = "checked";
                                        selectedConfirmPaymentSkip = "selected-negative";
                                    }

                                    if (purchasingDocumentItem.ActiveStage == "4")
                                    {
                                        hiddenEditButton = "";
                                    }
                                }
                            }

                            if (roleID == "vendor")
                            {
                                disabledCheckboxItem = "disabled";
                                hiddenEditButton = "hidden";
                            }

                            if (roleID == "administrator" || roleID == "others")
                            {
                                disabledCheckboxItem = "disabled";
                                disabledConfirmPaymentDate = "disabled";
                                disabledConfirmPaymentSubmit = "disabled";
                                disabledConfirmPaymentSkip = "disabled";
                                hiddenEditButton = "hidden";
                            }

                            <div class="po-item-data-content row-@rowStage3">
                                <div class="po-item-data-content__outer">
                                    <form class="po-form-item-st3">
                                        <div class="po-item-data-header__column">
                                            <div class="form-inline">
                                                <label class="checkbox-custom__label" @hiddenCheckbox>
                                                    <input class="checkbox-custom @st3CheckboxItem" @isChecked type="checkbox" @disabledCheckboxItem>
                                                    <span class="checkmark"></span>
                                                </label>
                                                <div class="form-group mr-2">
                                                    <input type="hidden" class="@st3ItemID" value="@purchasingDocumentItem.ID" />
                                                    <input type="text" class="form-control form-date with-icon @st3ItemConfirmPaymentDate" required="" autofocus="" pattern="^([0-2][0-9]|(3)[0-1])(\/)(((0)[0-9])|((1)[0-2]))(\/)\d{4}$" maxlength="10" placeholder="dd/mm/yyyy" autocomplete="off" value="@purchasingDocumentItem.ConfirmReceivedPaymentDateView" @disabledConfirmPaymentDate>
                                                    <i class="far fa-calendar-alt form-type-icon"></i>
                                                </div>
                                                <button type="submit" class="btn btn-positive @st3ConfirmPaymentSubmit @selectedConfirmPaymentSubmit mr-2" @disabledConfirmPaymentSubmit>Received</button>
                                                <button class="btn btn-negative @st3ConfirmPaymentSkip @selectedConfirmPaymentSkip" @disabledConfirmPaymentSkip @hiddenConfirmPaymentSkip>Skip</button>
                                                <a href="#" class="btn-icon @st3EditRow ml-1" @hiddenEditButton><i class="far fa-edit"></i></a>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                                <div class="po-item-data-content__child">
                                    @if (childPurchasingDocumentItems.Count() > 0)
                                    {
                                        foreach (var childPurchasingDocumentItem in childPurchasingDocumentItems)
                                        {
                                            disabledCheckboxItem = "disabled";
                                            disabledConfirmPaymentDate = "disabled";
                                            disabledConfirmPaymentSubmit = "disabled";
                                            disabledConfirmPaymentSkip = "disabled";
                                            selectedConfirmPaymentSubmit = "";
                                            selectedConfirmPaymentSkip = "";
                                            hiddenEditButton = "style=visibility:hidden";
                                            hiddenConfirmPaymentSkip = "";
                                            hiddenCheckbox = "";
                                            isChecked = "";

                                            if (childPurchasingDocumentItem.ActiveStage == "3")
                                            {
                                                disabledCheckboxItem = "";
                                            }
                                            else if (childPurchasingDocumentItem.ConfirmReceivedPaymentDate.HasValue)
                                            {
                                                isChecked = "checked";
                                                selectedConfirmPaymentSubmit = "selected";

                                                if (childPurchasingDocumentItem.ActiveStage == "4")
                                                {
                                                    hiddenEditButton = "";
                                                }
                                            }
                                            else if (!childPurchasingDocumentItem.ConfirmReceivedPaymentDate.HasValue)
                                            {
                                                if (childPurchasingDocumentItem.ActiveStageView != "2a")
                                                {
                                                    if (Convert.ToInt32(childPurchasingDocumentItem.ActiveStageView) > 3)
                                                    {
                                                        isChecked = "checked";
                                                        selectedConfirmPaymentSkip = "selected-negative";
                                                    }

                                                    if (childPurchasingDocumentItem.ActiveStage == "4")
                                                    {
                                                        hiddenEditButton = "";
                                                    }
                                                }
                                            }

                                            if (roleID == "vendor")
                                            {
                                                disabledCheckboxItem = "disabled";
                                                hiddenEditButton = "hidden";
                                            }

                                            if (roleID == "administrator" || roleID == "others")
                                            {
                                                disabledCheckboxItem = "disabled";
                                                disabledConfirmPaymentDate = "disabled";
                                                disabledConfirmPaymentSubmit = "disabled";
                                                disabledConfirmPaymentSkip = "disabled";
                                                hiddenEditButton = "hidden";
                                            }

                                            <div class="po-item-data-content row-@rowStage3-@childRowStage3" row="@rowStage3" child="@childRowStage3">
                                                <form class="po-form-item-st3">
                                                    <div class="po-item-data-header__column">
                                                        <div class="form-inline">
                                                            <label class="checkbox-custom__label" @hiddenCheckbox>
                                                                <input class="checkbox-custom @st3CheckboxItem" @isChecked type="checkbox" @disabledCheckboxItem>
                                                                <span class="checkmark"></span>
                                                            </label>
                                                            <div class="form-group mr-2">
                                                                <input type="hidden" class="@st3ItemID" value="@childPurchasingDocumentItem.ID" />
                                                                <input type="text" class="form-control form-date with-icon @st3ItemConfirmPaymentDate" required="" autofocus="" pattern="^([0-2][0-9]|(3)[0-1])(\/)(((0)[0-9])|((1)[0-2]))(\/)\d{4}$" maxlength="10" placeholder="dd/mm/yyyy" autocomplete="off" value="@childPurchasingDocumentItem.ConfirmReceivedPaymentDateView" @disabledConfirmPaymentDate>
                                                                <i class="far fa-calendar-alt form-type-icon"></i>
                                                            </div>
                                                            <button type="submit" class="btn btn-positive @st3ConfirmPaymentSubmit @selectedConfirmPaymentSubmit mr-2" @disabledConfirmPaymentSubmit>Received</button>
                                                            <button class="btn btn-negative @st3ConfirmPaymentSkip @selectedConfirmPaymentSkip" @disabledConfirmPaymentSkip @hiddenConfirmPaymentSkip>Skip</button>
                                                            <a href="#" class="btn-icon @st3EditRow ml-1" @hiddenEditButton><i class="far fa-edit"></i></a>
                                                        </div>
                                                    </div>
                                                </form>
                                            </div>
                                            childRowStage3++;
                                        }
                                    }
                                </div>
                            </div>
                            rowStage3++;
                        }
                    </div>
                </div>
                <div class="po-item-section stage-5 info-stage">
                    <div class="po-item-section-header justify-content-center">
                        <p class="mb-0">Stage 4</p>
                    </div>
                    <div class="po-item-section-body">
                        <div class="po-item-data-header">
                            <span class="po-item-data-header__text col-md-8 mr-5 pl-0">ETA Confirmation</span>
                            @if (roleID == "vendor")
                            {
                                <span class="po-item-data-header__text col-md-3 pl-0 mr-0">Upload Photo</span>
                            }
                            else
                            {
                                <span class="po-item-data-header__text col-md-2 pl-0 mr-10"></span>
                            }
                            <span class="po-item-data-header__text">info</span>
                        </div>
                        @{
                            var rowStage4 = 1;
                        }
                        @foreach (var purchasingDocumentItem in purchasingDocumentItems)
                        {
                            var childPurchasingDocumentItems = pO.PurchasingDocumentItems.Where(x => x.ParentID == purchasingDocumentItem.ID && x.ID != purchasingDocumentItem.ID);
                            var childRowStage4 = 1;

                            var st4ItemId = "st4-item-id";
                            var st4ItemIdInner = "st4-item-id-inner";
                            var st4UpdateEtaDateOnTime = "st4-update-eta-date-on-time";
                            var st4UpdateEtaDateOnTimeConfirm = "st4-update-eta-date-on-time-confirm";
                            var st4UpdateEtaDateDelay = "st4-update-eta-date-delay";
                            var st4UpdateEtaDateDelayConfirm = "st4-update-eta-date-delay-confirm";
                            var st4UploadProgressPhotoes = "st4-upload-progress-photoes";
                            var st4UploadProgressPhotoesConfirm = "st4-upload-progress-photoes-confirm";
                            var st4DelayReason = "st4-delay-reason";
                            var st4UploadingForm = "st4-uploading-form";
                            var st4UploadedForm = "st4-uploaded-form";

                            var disabledInputUpdateEtaDateOnTime = "disabled";
                            var disabledInputUpdateEtaDateOnTimeConfirm = "disabled";
                            var disabledInputUpdateEtaDateDelay = "disabled";
                            var disabledInputUpdateEtaDateDelayConfirm = "disabled";
                            var disabledInputUploadProgressPhotoes = "disabled";
                            var disabledInputUploadProgressPhotoesConfirm = "disabled";
                            var disabledDelayReason = "disabled";

                            var selectedInputUpdateEtaDateOnTime = "";
                            var selectedInputUpdateEtaDateDelay = "";
                            var hiddenUploadingForm = "";

                            var valueInputUpdateEtaDateOnTime = "";
                            var valueInputUpdateEtaDateDelay = "";
                            var valueDelayReason = 0;

                            if (purchasingDocumentItem.HasETAHistory)
                            {
                                valueInputUpdateEtaDateOnTime = purchasingDocumentItem.FirstETAHistory.ETADateView;
                            }

                            if (purchasingDocumentItem.LastETAHistory.DelayReasonID != null)
                            {
                                valueDelayReason = purchasingDocumentItem.LastETAHistory.DelayReasonID.GetValueOrDefault();
                            }

                            if (purchasingDocumentItem.ActiveStage == "4")
                            {
                                if (roleID == "vendor")
                                {
                                    if (purchasingDocumentItem.ETAHistories.Count < 2)
                                    {
                                        disabledInputUpdateEtaDateOnTime = "disabled";
                                        disabledInputUpdateEtaDateOnTimeConfirm = "";
                                        disabledInputUpdateEtaDateDelay = "";
                                        disabledInputUpdateEtaDateDelayConfirm = "";
                                        disabledDelayReason = "";
                                        //disabledInputUploadProgressPhotoes = "disabled";
                                        //disabledInputUploadProgressPhotoesConfirm = "disabled";

                                        valueInputUpdateEtaDateOnTime = purchasingDocumentItem.FirstETAHistory.ETADateView;

                                        if (purchasingDocumentItem.ProgressPhotoes.Count < 1)
                                        {
                                            disabledInputUploadProgressPhotoes = "";
                                            disabledInputUploadProgressPhotoesConfirm = "";
                                        }
                                        else
                                        {
                                            disabledInputUploadProgressPhotoes = "disabled";
                                            disabledInputUploadProgressPhotoesConfirm = "disabled";
                                        }
                                    }
                                    else
                                    {
                                        disabledInputUpdateEtaDateOnTime = "disabled";
                                        disabledInputUpdateEtaDateOnTimeConfirm = "disabled";
                                        disabledInputUpdateEtaDateDelay = "disabled";
                                        disabledInputUpdateEtaDateDelayConfirm = "disabled";
                                        //disabledInputUploadProgressPhotoes = "";
                                        //disabledInputUploadProgressPhotoesConfirm = "";

                                        if (purchasingDocumentItem.IsDelayed)
                                        {
                                            valueInputUpdateEtaDateOnTime = "";
                                            valueInputUpdateEtaDateDelay = purchasingDocumentItem.LastETAHistory.ETADateView;

                                            selectedInputUpdateEtaDateDelay = "selected-negative";
                                        }
                                        else
                                        {
                                            valueInputUpdateEtaDateOnTime = purchasingDocumentItem.LastETAHistory.ETADateView;
                                            valueInputUpdateEtaDateDelay = "";

                                            selectedInputUpdateEtaDateOnTime = "selected";
                                        }

                                        if (purchasingDocumentItem.ProgressPhotoes.Count < 1)
                                        {
                                            disabledInputUploadProgressPhotoes = "";
                                            disabledInputUploadProgressPhotoesConfirm = "";
                                        }
                                        else
                                        {
                                            disabledInputUploadProgressPhotoes = "disabled";
                                            disabledInputUploadProgressPhotoesConfirm = "disabled";
                                        }
                                    }
                                }
                                else
                                {
                                    hiddenUploadingForm = "hidden";

                                    disabledInputUpdateEtaDateOnTime = "disabled";
                                    disabledInputUpdateEtaDateOnTimeConfirm = "disabled";
                                    disabledInputUpdateEtaDateDelay = "disabled";
                                    disabledInputUpdateEtaDateDelayConfirm = "disabled";
                                    disabledInputUploadProgressPhotoes = "disabled";
                                    disabledInputUploadProgressPhotoesConfirm = "disabled";

                                    if (purchasingDocumentItem.ETAHistories.Count > 1)
                                    {

                                        if (purchasingDocumentItem.IsDelayed)
                                        {
                                            valueInputUpdateEtaDateOnTime = "";
                                            valueInputUpdateEtaDateDelay = purchasingDocumentItem.LastETAHistory.ETADateView;

                                            selectedInputUpdateEtaDateDelay = "selected-negative";
                                        }
                                        else
                                        {
                                            valueInputUpdateEtaDateOnTime = purchasingDocumentItem.LastETAHistory.ETADateView;
                                            valueInputUpdateEtaDateDelay = "";

                                            selectedInputUpdateEtaDateOnTime = "selected";
                                        }
                                    }
                                }
                            }
                            else
                            {
                                if (purchasingDocumentItem.ETAHistories.Count < 2)
                                {
                                    disabledInputUpdateEtaDateOnTime = "disabled";
                                    disabledInputUpdateEtaDateOnTimeConfirm = "disabled";
                                    disabledInputUpdateEtaDateDelay = "disabled";
                                    disabledInputUpdateEtaDateDelayConfirm = "disabled";
                                    disabledInputUploadProgressPhotoes = "disabled";
                                    disabledInputUploadProgressPhotoesConfirm = "disabled";

                                    valueInputUpdateEtaDateOnTime = purchasingDocumentItem.FirstETAHistory.ETADateView;

                                    if (roleID == "procurement" || roleID == "administrator")
                                    {
                                        disabledInputUploadProgressPhotoes = "disabled";
                                        disabledInputUploadProgressPhotoesConfirm = "disabled";
                                        hiddenUploadingForm = "hidden";

                                    }
                                }
                                else
                                {
                                    disabledInputUpdateEtaDateOnTime = "disabled";
                                    disabledInputUpdateEtaDateOnTimeConfirm = "disabled";
                                    disabledInputUpdateEtaDateDelay = "disabled";
                                    disabledInputUpdateEtaDateDelayConfirm = "disabled";
                                    disabledInputUploadProgressPhotoes = "disabled";
                                    disabledInputUploadProgressPhotoesConfirm = "disabled";

                                    if (roleID == "vendor")
                                    {
                                        if (purchasingDocumentItem.ProgressPhotoes.Count < 1)
                                        {
                                            disabledInputUploadProgressPhotoes = "";
                                            disabledInputUploadProgressPhotoesConfirm = "";
                                        }
                                        else
                                        {
                                            disabledInputUploadProgressPhotoes = "disabled";
                                            disabledInputUploadProgressPhotoesConfirm = "disabled";
                                        }
                                    }
                                    else
                                    {
                                        disabledInputUploadProgressPhotoes = "disabled";
                                        disabledInputUploadProgressPhotoesConfirm = "disabled";
                                        hiddenUploadingForm = "hidden";

                                    }

                                    if (purchasingDocumentItem.IsDelayed)
                                    {
                                        valueInputUpdateEtaDateOnTime = "";
                                        valueInputUpdateEtaDateDelay = purchasingDocumentItem.LastETAHistory.ETADateView;

                                        selectedInputUpdateEtaDateDelay = "selected-negative";
                                    }
                                    else
                                    {
                                        valueInputUpdateEtaDateOnTime = purchasingDocumentItem.LastETAHistory.ETADateView;
                                        valueInputUpdateEtaDateDelay = "";

                                        selectedInputUpdateEtaDateOnTime = "selected";
                                    }
                                }
                            }

                            if (!purchasingDocumentItem.IsSeventyFivePercent)
                            {
                                disabledInputUpdateEtaDateOnTime = "disabled";
                                disabledInputUpdateEtaDateOnTimeConfirm = "disabled";
                                disabledInputUpdateEtaDateDelay = "disabled";
                                disabledDelayReason = "disabled";
                                disabledInputUpdateEtaDateDelayConfirm = "disabled";
                                disabledInputUploadProgressPhotoes = "disabled";
                                disabledInputUploadProgressPhotoesConfirm = "disabled";
                            }

                            if (roleID == "administrator" || roleID == "others")
                            {
                                disabledInputUpdateEtaDateOnTime = "disabled";
                                disabledInputUpdateEtaDateOnTimeConfirm = "disabled";
                                disabledInputUpdateEtaDateDelay = "disabled";
                                disabledInputUpdateEtaDateDelayConfirm = "disabled";
                                disabledInputUploadProgressPhotoes = "disabled";
                                disabledInputUploadProgressPhotoesConfirm = "disabled";
                                disabledDelayReason = "disabled";
                            }

                            <div class="po-item-data-content row-@rowStage4">
                                <div class="po-item-data-content__outer">
                                    <div class="po-item-data-header__column">
                                        <div class="form-inline">
                                            <input type="hidden" class="@st4ItemId" value="@purchasingDocumentItem.ID" />
                                            <div class="form-group mr-2">
                                                <input type="text" class="form-control form-date with-icon @st4UpdateEtaDateOnTime" value="@valueInputUpdateEtaDateOnTime" required="" autofocus="" pattern="^([0-2][0-9]|(3)[0-1])(\/)(((0)[0-9])|((1)[0-2]))(\/)\d{4}$" maxlength="10" mindate="@purchasingDocumentItem.FirstETAHistory.ETADateView" placeholder="dd/mm/yyyy" autocomplete="off" @disabledInputUpdateEtaDateOnTime>
                                                <i class="far fa-calendar-alt form-type-icon"></i>
                                            </div>
                                            <button class="btn btn-positive mr-3 @st4UpdateEtaDateOnTimeConfirm @selectedInputUpdateEtaDateOnTime" @disabledInputUpdateEtaDateOnTimeConfirm>On Time</button>
                                            <div class="form-group mr-2">
                                                @*<input type="text" class="form-control form-date with-icon @st4UpdateEtaDateDelay" value="@valueInputUpdateEtaDateDelay" required="" autofocus="" pattern="^([0-2][0-9]|(3)[0-1])(\/)(((0)[0-9])|((1)[0-2]))(\/)\d{4}$" maxlength="10" mindate="@purchasingDocumentItem.FirstETAHistory.ETADateView" placeholder="dd/mm/yyyy" autocomplete="off" @disabledInputUpdateEtaDateDelay>*@
                                                <input type="text" class="form-control form-date with-icon @st4UpdateEtaDateDelay" value="@valueInputUpdateEtaDateDelay" required="" pattern="^([0-2][0-9]|(3)[0-1])(\/)(((0)[0-9])|((1)[0-2]))(\/)\d{4}$" maxlength="10" mindate="@purchasingDocumentItem.FirstETAHistory.ETADateView" placeholder="dd/mm/yyyy" autocomplete="off" @disabledInputUpdateEtaDateDelay>
                                                <i class="far fa-calendar-alt form-type-icon"></i>
                                            </div>
                                            <div class="form-group mr-2">
                                                <select id="delayReason" name="delayReason" class="form-control @st4DelayReason" value="@valueDelayReason" @disabledDelayReason>
                                                    <option value="0">select reason</option>
                                                    @foreach (var delayReason in ViewBag.DelayReasons)
                                                    {
                                                        <option value="@delayReason.ID">@delayReason.Name</option>
                                                    }
                                                </select>
                                            </div>
                                            <button class="btn btn-negative mr-3 @st4UpdateEtaDateDelayConfirm @selectedInputUpdateEtaDateDelay" @disabledInputUpdateEtaDateDelayConfirm>Delay</button>
                                        </div>
                                    </div>
                                    <div class="po-item-data-header__column">
                                        <div class="form-inline @st4UploadingForm" @hiddenUploadingForm>
                                            <div class="form-group mr-2">
                                                <input type="hidden" class="@st4ItemIdInner" value="@purchasingDocumentItem.ID" />
                                                <input type="file" id="file" class="form-control with-icon @st4UploadProgressPhotoes" @disabledInputUploadProgressPhotoes multiple>
                                                <i class="fas fa-paperclip form-type-icon"></i>
                                            </div>
                                            <button class="btn btn-positive @st4UploadProgressPhotoesConfirm" @disabledInputUploadProgressPhotoesConfirm>Save</button>
                                        </div>
                                    </div>
                                    <div class="po-item-data-header__column info">
                                        <div class="form-inline @st4UploadedForm">
                                            <i class="fas fa-info-circle po-item-section-header__icon info mt-2"></i>
                                            <div class="pop-up-notification">
                                                @if (purchasingDocumentItem.ProgressPhotoes.Count > 0)
                                                {
                                                    foreach (var progressPhoto in purchasingDocumentItem.ProgressPhotoes)
                                                    {
                                                        <span class="mr-2">
                                                            @*<img src="@Path.Combine("..\\Files\\Local\\ProgressProforma", progressPhoto.FileName)" width="125px" height="125px" data-id="@progressPhoto.ID">*@
                                                            <img src="@Path.Combine("/", iisAppName, "Files/Local/ProgressProforma", progressPhoto.FileName)" width="125px" height="125px" data-id="@progressPhoto.ID">
                                                        </span>
                                                    }
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="po-item-data-content__child">
                                    @if (childPurchasingDocumentItems.Count() > 0)
                                    {
                                        foreach (var childPurchasingDocumentItem in childPurchasingDocumentItems)
                                        {
                                            disabledInputUpdateEtaDateOnTime = "disabled";
                                            disabledInputUpdateEtaDateOnTimeConfirm = "disabled";
                                            disabledInputUpdateEtaDateDelay = "disabled";
                                            disabledInputUpdateEtaDateDelayConfirm = "disabled";
                                            disabledInputUploadProgressPhotoes = "disabled";
                                            disabledInputUploadProgressPhotoesConfirm = "disabled";
                                            disabledDelayReason = "disabled";

                                            selectedInputUpdateEtaDateOnTime = "";
                                            selectedInputUpdateEtaDateDelay = "";
                                            hiddenUploadingForm = "";

                                            valueInputUpdateEtaDateOnTime = "";
                                            valueInputUpdateEtaDateDelay = "";
                                            valueDelayReason = 0;

                                            if (childPurchasingDocumentItem.HasETAHistory)
                                            {
                                                valueInputUpdateEtaDateOnTime = childPurchasingDocumentItem.FirstETAHistory.ETADateView;
                                            }

                                            if (childPurchasingDocumentItem.LastETAHistory.DelayReasonID != null)
                                            {
                                                valueDelayReason = childPurchasingDocumentItem.LastETAHistory.DelayReasonID.GetValueOrDefault();
                                            }

                                            if (childPurchasingDocumentItem.ActiveStage == "4")
                                            {
                                                if (roleID == "vendor")
                                                {
                                                    if (childPurchasingDocumentItem.ETAHistories.Count < 2)
                                                    {
                                                        disabledInputUpdateEtaDateOnTime = "disabled";
                                                        disabledInputUpdateEtaDateOnTimeConfirm = "";
                                                        disabledInputUpdateEtaDateDelay = "";
                                                        disabledInputUpdateEtaDateDelayConfirm = "";
                                                        disabledDelayReason = "";
                                                        //disabledInputUploadProgressPhotoes = "disabled";
                                                        //disabledInputUploadProgressPhotoesConfirm = "disabled";

                                                        valueInputUpdateEtaDateOnTime = childPurchasingDocumentItem.FirstETAHistory.ETADateView;

                                                        if (childPurchasingDocumentItem.ProgressPhotoes.Count < 1)
                                                        {
                                                            disabledInputUploadProgressPhotoes = "";
                                                            disabledInputUploadProgressPhotoesConfirm = "";
                                                        }
                                                        else
                                                        {
                                                            disabledInputUploadProgressPhotoes = "disabled";
                                                            disabledInputUploadProgressPhotoesConfirm = "disabled";
                                                        }
                                                    }
                                                    else
                                                    {
                                                        disabledInputUpdateEtaDateOnTime = "disabled";
                                                        disabledInputUpdateEtaDateOnTimeConfirm = "disabled";
                                                        disabledInputUpdateEtaDateDelay = "disabled";
                                                        disabledInputUpdateEtaDateDelayConfirm = "disabled";
                                                        //disabledInputUploadProgressPhotoes = "";
                                                        //disabledInputUploadProgressPhotoesConfirm = "";

                                                        if (childPurchasingDocumentItem.IsDelayed)
                                                        {
                                                            valueInputUpdateEtaDateOnTime = "";
                                                            valueInputUpdateEtaDateDelay = childPurchasingDocumentItem.LastETAHistory.ETADateView;

                                                            selectedInputUpdateEtaDateDelay = "selected-negative";
                                                        }
                                                        else
                                                        {
                                                            valueInputUpdateEtaDateOnTime = childPurchasingDocumentItem.LastETAHistory.ETADateView;
                                                            valueInputUpdateEtaDateDelay = "";

                                                            selectedInputUpdateEtaDateOnTime = "selected";
                                                        }

                                                        if (childPurchasingDocumentItem.ProgressPhotoes.Count < 1)
                                                        {
                                                            disabledInputUploadProgressPhotoes = "";
                                                            disabledInputUploadProgressPhotoesConfirm = "";
                                                        }
                                                        else
                                                        {
                                                            disabledInputUploadProgressPhotoes = "disabled";
                                                            disabledInputUploadProgressPhotoesConfirm = "disabled";
                                                        }

                                                    }
                                                }
                                                else
                                                {
                                                    hiddenUploadingForm = "hidden";

                                                    disabledInputUpdateEtaDateOnTime = "disabled";
                                                    disabledInputUpdateEtaDateOnTimeConfirm = "disabled";
                                                    disabledInputUpdateEtaDateDelay = "disabled";
                                                    disabledInputUpdateEtaDateDelayConfirm = "disabled";
                                                    disabledInputUploadProgressPhotoes = "disabled";
                                                    disabledInputUploadProgressPhotoesConfirm = "disabled";

                                                    if (purchasingDocumentItem.ETAHistories.Count > 1)
                                                    {

                                                        if (childPurchasingDocumentItem.IsDelayed)
                                                        {
                                                            valueInputUpdateEtaDateOnTime = "";
                                                            valueInputUpdateEtaDateDelay = childPurchasingDocumentItem.LastETAHistory.ETADateView;

                                                            selectedInputUpdateEtaDateDelay = "selected-negative";
                                                        }
                                                        else
                                                        {
                                                            valueInputUpdateEtaDateOnTime = childPurchasingDocumentItem.LastETAHistory.ETADateView;
                                                            valueInputUpdateEtaDateDelay = "";

                                                            selectedInputUpdateEtaDateOnTime = "selected";
                                                        }
                                                    }
                                                }
                                            }
                                            else
                                            {
                                                if (childPurchasingDocumentItem.ETAHistories.Count < 2)
                                                {
                                                    disabledInputUpdateEtaDateOnTime = "disabled";
                                                    disabledInputUpdateEtaDateOnTimeConfirm = "disabled";
                                                    disabledInputUpdateEtaDateDelay = "disabled";
                                                    disabledInputUpdateEtaDateDelayConfirm = "disabled";
                                                    disabledInputUploadProgressPhotoes = "disabled";
                                                    disabledInputUploadProgressPhotoesConfirm = "disabled";

                                                    valueInputUpdateEtaDateOnTime = childPurchasingDocumentItem.FirstETAHistory.ETADateView;

                                                    if (roleID == "procurement" || roleID == "administrator")
                                                    {
                                                        disabledInputUploadProgressPhotoes = "disabled";
                                                        disabledInputUploadProgressPhotoesConfirm = "disabled";
                                                        hiddenUploadingForm = "hidden";

                                                    }
                                                }
                                                else
                                                {
                                                    disabledInputUpdateEtaDateOnTime = "disabled";
                                                    disabledInputUpdateEtaDateOnTimeConfirm = "disabled";
                                                    disabledInputUpdateEtaDateDelay = "disabled";
                                                    disabledInputUpdateEtaDateDelayConfirm = "disabled";
                                                    disabledInputUploadProgressPhotoes = "disabled";
                                                    disabledInputUploadProgressPhotoesConfirm = "disabled";

                                                    if (roleID == "vendor")
                                                    {
                                                        if (childPurchasingDocumentItem.ProgressPhotoes.Count < 1)
                                                        {
                                                            disabledInputUploadProgressPhotoes = "";
                                                            disabledInputUploadProgressPhotoesConfirm = "";
                                                        }
                                                        else
                                                        {
                                                            disabledInputUploadProgressPhotoes = "disabled";
                                                            disabledInputUploadProgressPhotoesConfirm = "disabled";
                                                        }
                                                    }
                                                    else
                                                    {
                                                        disabledInputUploadProgressPhotoes = "disabled";
                                                        disabledInputUploadProgressPhotoesConfirm = "disabled";
                                                        hiddenUploadingForm = "hidden";

                                                    }

                                                    if (childPurchasingDocumentItem.IsDelayed)
                                                    {
                                                        valueInputUpdateEtaDateOnTime = "";
                                                        valueInputUpdateEtaDateDelay = childPurchasingDocumentItem.LastETAHistory.ETADateView;

                                                        selectedInputUpdateEtaDateDelay = "selected-negative";
                                                    }
                                                    else
                                                    {
                                                        valueInputUpdateEtaDateOnTime = childPurchasingDocumentItem.LastETAHistory.ETADateView;
                                                        valueInputUpdateEtaDateDelay = "";

                                                        selectedInputUpdateEtaDateOnTime = "selected";
                                                    }
                                                }
                                            }

                                            if (!childPurchasingDocumentItem.IsSeventyFivePercent)
                                            {
                                                disabledInputUpdateEtaDateOnTime = "disabled";
                                                disabledInputUpdateEtaDateOnTimeConfirm = "disabled";
                                                disabledInputUpdateEtaDateDelay = "disabled";
                                                disabledDelayReason = "disabled";
                                                disabledInputUpdateEtaDateDelayConfirm = "disabled";
                                                disabledInputUploadProgressPhotoes = "disabled";
                                                disabledInputUploadProgressPhotoesConfirm = "disabled";
                                            }

                                            if (roleID == "administrator" || roleID == "others")
                                            {
                                                disabledInputUpdateEtaDateOnTime = "disabled";
                                                disabledInputUpdateEtaDateOnTimeConfirm = "disabled";
                                                disabledInputUpdateEtaDateDelay = "disabled";
                                                disabledInputUpdateEtaDateDelayConfirm = "disabled";
                                                disabledInputUploadProgressPhotoes = "disabled";
                                                disabledInputUploadProgressPhotoesConfirm = "disabled";
                                                disabledDelayReason = "disabled";
                                            }

                                            <div class="po-item-data-content row-@rowStage4-@childRowStage4" row="@rowStage4" child="@childRowStage4">
                                                <div class="po-item-data-header__column">
                                                    <div class="form-inline">
                                                        <input type="hidden" class="@st4ItemId" value="@childPurchasingDocumentItem.ID" />
                                                        <div class="form-group mr-2">
                                                            <input type="text" class="form-control form-date with-icon @st4UpdateEtaDateOnTime" value="@valueInputUpdateEtaDateOnTime" required="" autofocus="" pattern="^([0-2][0-9]|(3)[0-1])(\/)(((0)[0-9])|((1)[0-2]))(\/)\d{4}$" maxlength="10" placeholder="dd/mm/yyyy" mindate="@childPurchasingDocumentItem.FirstETAHistory.ETADateView" autocomplete="off" @disabledInputUpdateEtaDateOnTime>
                                                            <i class="far fa-calendar-alt form-type-icon"></i>
                                                        </div>
                                                        <button class="btn btn-positive mr-3 @st4UpdateEtaDateOnTimeConfirm @selectedInputUpdateEtaDateOnTime" @disabledInputUpdateEtaDateOnTimeConfirm>On Time</button>
                                                        <div class="form-group mr-2">
                                                            @*<input type="text" class="form-control form-date with-icon @st4UpdateEtaDateDelay" value="@valueInputUpdateEtaDateDelay" required="" autofocus="" pattern="^([0-2][0-9]|(3)[0-1])(\/)(((0)[0-9])|((1)[0-2]))(\/)\d{4}$" maxlength="10" placeholder="dd/mm/yyyy" mindate="@childPurchasingDocumentItem.FirstETAHistory.ETADateView" autocomplete="off" @disabledInputUpdateEtaDateDelay>*@
                                                            <input type="text" class="form-control form-date with-icon @st4UpdateEtaDateDelay" value="@valueInputUpdateEtaDateDelay" required="" pattern="^([0-2][0-9]|(3)[0-1])(\/)(((0)[0-9])|((1)[0-2]))(\/)\d{4}$" maxlength="10" placeholder="dd/mm/yyyy" mindate="@childPurchasingDocumentItem.FirstETAHistory.ETADateView" autocomplete="off" @disabledInputUpdateEtaDateDelay>
                                                            <i class="far fa-calendar-alt form-type-icon"></i>
                                                        </div>
                                                        <div class="form-group mr-2">
                                                            <select id="delayReason" name="delayReason" class="form-control @st4DelayReason" value="@valueDelayReason" @disabledDelayReason>
                                                                <option value="0">select reason</option>
                                                                @foreach (var delayReason in ViewBag.DelayReasons)
                                                                {
                                                                    <option value="@delayReason.ID">@delayReason.Name</option>
                                                                }
                                                            </select>
                                                        </div>
                                                        <button class="btn btn-negative mr-3 @st4UpdateEtaDateDelayConfirm @selectedInputUpdateEtaDateDelay" @disabledInputUpdateEtaDateDelayConfirm>Delay</button>
                                                    </div>
                                                </div>
                                                <div class="po-item-data-header__column">
                                                    <div class="form-inline @st4UploadingForm" @hiddenUploadingForm>
                                                        <div class="form-group mr-2">
                                                            <input type="hidden" class="@st4ItemIdInner" value="@childPurchasingDocumentItem.ID" />
                                                            <input type="file" id="file" class="form-control with-icon @st4UploadProgressPhotoes" @disabledInputUploadProgressPhotoes multiple>
                                                            <i class="fas fa-paperclip form-type-icon"></i>
                                                        </div>
                                                        <button class="btn btn-positive @st4UploadProgressPhotoesConfirm" @disabledInputUploadProgressPhotoesConfirm>Save</button>
                                                    </div>
                                                </div>
                                                <div class="po-item-data-header__column info">
                                                    <div class="form-inline @st4UploadedForm">
                                                        <i class="fas fa-info-circle po-item-section-header__icon info mt-2"></i>
                                                        <div class="pop-up-notification">
                                                            @if (childPurchasingDocumentItem.ProgressPhotoes.Count > 0)
                                                            {
                                                                foreach (var progressPhoto in childPurchasingDocumentItem.ProgressPhotoes)
                                                                {
                                                                    <span class="mr-2">
                                                                        @*<img src="@Path.Combine("..\\Files\\Local\\ProgressProforma", progressPhoto.FileName)" width="50px" height="50px" data-id="@progressPhoto.ID">*@
                                                                        <img src="@Path.Combine("/", iisAppName, "Files/Local/ProgressProforma", progressPhoto.FileName)" width="125px" height="125px" data-id="@progressPhoto.ID">
                                                                    </span>
                                                                }
                                                            }
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            childRowStage4++;
                                        }
                                    }
                                </div>
                            </div>
                            rowStage4++;
                        }
                    </div>
                </div>
                <div class="po-item-section stage-6 info-stage">
                    <div class="po-item-section-header justify-content-center">
                        <p class="mb-0">Stage 5</p>
                    </div>
                    <div class="po-item-section-body">
                        <div class="po-item-data-header">
                            <span class="po-item-data-header__text gr-date">GR Date</span>
                            <span class="po-item-data-header__text gr-qty">Qty</span>
                            <span class="po-item-data-header__text gr-complete">GR Completed</span>
                            <span class="po-item-data-header__text">info</span>
                        </div>
                        @{
                            row = 1;
                        }
                        @foreach (var purchasingDocumentItem in purchasingDocumentItems)
                        {
                            var hideGR = "";
                            var hideMT = "mt-customize";
                            var latestGR = purchasingDocumentItem.LatestPurchasingDocumentItemHistories.GoodsReceiptQuantity;
                            var confirmedQty = purchasingDocumentItem.ConfirmedQuantity;
                            //if (roleID == "vendor" && purchasingDocumentItem.ActiveStageToNumber < 5)
                            //{
                            //    hideGR = "style=visibility:hidden";
                            //}
                            var grDateNewDateFormat = purchasingDocumentItem.LatestPurchasingDocumentItemHistories.GoodsReceiptDate.HasValue ? purchasingDocumentItem.LatestPurchasingDocumentItemHistories.GoodsReceiptDate.Value.ToString("dd/MM/yyyy") : "";
                            var isComplete = "No";

                            if (purchasingDocumentItem.ConfirmedQuantity > 0)
                            {
                                if (purchasingDocumentItem.LatestPurchasingDocumentItemHistories.GoodsReceiptQuantity >= purchasingDocumentItem.ConfirmedQuantity)
                                {
                                    isComplete = "Yes";
                                }
                            }
                            else
                            {
                                grDateNewDateFormat = purchasingDocumentItem.LatestGRDate.HasValue ? purchasingDocumentItem.LatestGRDate.Value.ToString("dd/MM/yyyy") : "";
                                latestGR = purchasingDocumentItem.TotalGR;
                                confirmedQty = purchasingDocumentItem.Quantity;
                                if (latestGR >= confirmedQty)
                                {
                                    isComplete = "Yes";
                                }
                            }

                            <div class="po-item-data-content row-@row" row="@row">
                                <div class="po-item-data-content__outer" @hideGR>
                                    <span class="po-item-data-header__column gr-date">@grDateNewDateFormat</span>
                                    <span class="po-item-data-header__column gr-qty">@latestGR / @confirmedQty</span>
                                    <span class="po-item-data-header__column gr-complete">@isComplete</span>
                                    <span class="po-item-data-header__text info">
                                        <i class="fas fa-info-circle po-item-section-header__icon info"></i>
                                        <div class="pop-up-notification">
                                            <table>
                                                <tbody>
                                                    <tr>
                                                        <td class="pr-3">GR / Inspection Date</td>
                                                        <td class="pr-3">Document Material</td>
                                                        <td class="pr-3">Delivery Order</td>
                                                        <td class="pr-3">Movement Type</td>
                                                        <td>Qty</td>
                                                    </tr>
                                                    @foreach (var pdih in purchasingDocumentItem.PurchasingDocumentItemHistoriesDetail)
                                                    {
                                                        grDateNewDateFormat = pdih.GoodsReceiptDate.HasValue ? pdih.GoodsReceiptDate.Value.ToString("dd/MM/yyyy") : "";

                                                        <tr>
                                                            <td class="secondary-text pr-3">@grDateNewDateFormat</td>
                                                            <td class="secondary-text pr-3">@pdih.DocumentNumber</td>
                                                            <td class="secondary-text pr-3">@pdih.DeliveryOrder</td>
                                                            <td class="secondary-text pr-3">@pdih.MovementType</td>
                                                            <td class="secondary-text">@pdih.GoodsReceiptQuantity</td>
                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                    </span>

                                </div>
                                <div class="po-item-data-content__child">
                                    @{
                                        var rowChild = 1;
                                    }
                                    @foreach (var purchasingDocumentItemChild in purchasingDocumentItemChilds.Where(x => x.ParentID == purchasingDocumentItem.ID))
                                    {
                                        isComplete = "No";
                                        if (purchasingDocumentItemChild.LatestPurchasingDocumentItemHistories.GoodsReceiptQuantity >= purchasingDocumentItemChild.ConfirmedQuantity)
                                        {
                                            isComplete = "Yes";
                                        }
                                        grDateNewDateFormat = purchasingDocumentItemChild.LatestPurchasingDocumentItemHistories.GoodsReceiptDate.HasValue ? purchasingDocumentItemChild.LatestPurchasingDocumentItemHistories.GoodsReceiptDate.Value.ToString("dd/MM/yyyy") : "";
                                        hideGR = "";
                                        //if (roleID == "vendor" && purchasingDocumentItemChild.ActiveStageToNumber < 5)
                                        //{
                                        //    hideGR = "style=visibility:hidden";
                                        //}

                                        if (rowChild == 1)
                                        {
                                            hideMT = "";
                                        }
                                        else
                                        {
                                            hideMT = "mt-customize";
                                        }

                                        <div class="po-item-data-content row-@row-@rowChild @hideMT" row="@row" child="@rowChild" @hideGR>
                                            <span class="po-item-data-header__column gr-date">@grDateNewDateFormat</span>
                                            <span class="po-item-data-header__column gr-qty">@purchasingDocumentItemChild.LatestPurchasingDocumentItemHistories.GoodsReceiptQuantity / @purchasingDocumentItemChild.ConfirmedQuantity</span>
                                            <span class="po-item-data-header__column gr-complete">@isComplete</span>
                                            <span class="po-item-data-header__text info">
                                                <i class="fas fa-info-circle po-item-section-header__icon info"></i>
                                                <div class="pop-up-notification">
                                                    <table>
                                                        <tbody>
                                                            <tr>
                                                                <td class="pr-3">GR / Inspection Date</td>
                                                                <td class="pr-3">Document Material</td>
                                                                <td class="pr-3">Delivery Order</td>
                                                                <td class="pr-3">Movement Type</td>
                                                                <td>Qty</td>
                                                            </tr>
                                                            @foreach (var pdih in purchasingDocumentItemChild.PurchasingDocumentItemHistoriesDetail)
                                                            {
                                                                grDateNewDateFormat = pdih.GoodsReceiptDate.HasValue ? pdih.GoodsReceiptDate.Value.ToString("dd/MM/yyyy") : "";
                                                                <tr>
                                                                    <td class="secondary-text pr-3">@grDateNewDateFormat</td>
                                                                    <td class="secondary-text pr-3">@pdih.DocumentNumber</td>
                                                                    <td class="secondary-text pr-3">@pdih.DeliveryOrder</td>
                                                                    <td class="secondary-text pr-3">@pdih.MovementType</td>
                                                                    <td class="secondary-text pr-3">@pdih.GoodsReceiptQuantity</td>
                                                                </tr>
                                                            }
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </span>
                                        </div>
                                        rowChild++;
                                    }
                                </div>
                            </div>
                            row++;
                        }
                    </div>
                </div>
                @*<div class="po-item-section stage-7">
                        <div class="po-item-section-header stage-checkbox-header">
                            <div>
                                <label class="checkbox-custom__label mr-0">
                                    <input class="checkbox-custom st2-checkbox-all" type="checkbox">
                                    <span class="checkmark"></span>
                                </label>
                            </div>
                            <div><p class="mb-0">Stage 6</p></div>
                            <div>
                            </div>
                        </div>
                        <div class="po-item-section-body">
                            <div class="po-item-data-header">
                                <span class="po-item-data-header__text invoice-method">Invoice Method</span>
                            </div>
                            @{
                            var rowStage6 = 1;
                            }
                            @foreach (var purchasingDocumentItem in purchasingDocumentItems)
                            {
                            var childPurchasingDocumentItems = pO.PurchasingDocumentItems.Where(x => x.ParentID == purchasingDocumentItem.ID && x.ID != purchasingDocumentItem.ID);
                            var childRowStage6 = 1;

                            <div class="po-item-data-content row-@rowStage6">
                                <div class="po-item-data-content__outer">
                                    <div class="po-item-data-header__column invoice-method">
                                        <div class="form-inline">
                                            <label class="checkbox-custom__label">
                                                <input class="checkbox-custom st2-checkbox-item" type="checkbox" disabled>
                                                <span class="checkmark"></span>
                                            </label>
                                            <div class="form-group mr-2">
                                                <select class="form-control">
                                                    <option>Choose One</option>
                                                    <option>Full</option>
                                                    <option>Partial by GR</option>
                                                </select>
                                            </div>
                                            <button class="btn btn-positive">Save</button>
                                        </div>
                                    </div>
                                </div>
                                <div class="po-item-data-content__child">
                                    @if (childPurchasingDocumentItems.Count() > 0)
                                    {
                                    foreach (var childPurchasingDocumentItem in childPurchasingDocumentItems)
                                    {
                                    <div class="po-item-data-content row-@rowStage6-@childRowStage6" row="@rowStage6" child="@childRowStage6">
                                        <div class="po-item-data-header__column invoice-method">
                                            <div class="form-inline">
                                                <label class="checkbox-custom__label">
                                                    <input class="checkbox-custom st2-checkbox-item" type="checkbox" disabled>
                                                    <span class="checkmark"></span>
                                                </label>
                                                <div class="form-group mr-2">
                                                    <select class="form-control">
                                                        <option>Choose One</option>
                                                        <option>Full</option>
                                                        <option>Partial by GR</option>
                                                    </select>
                                                </div>
                                                <button class="btn btn-positive">Save</button>
                                            </div>
                                        </div>
                                    </div>
                                    childRowStage6++;
                                    }
                                    }
                                </div>
                            </div>
                            rowStage6++;
                            }
                        </div>
                    </div>*@
                <div class="po-item-section stage-7">
                    <div class="po-item-section-header justify-content-center">
                        <p class="mb-0">Stage 6</p>
                    </div>
                    <div class="po-item-section-body">
                        <div class="po-item-data-header">
                            <span class="po-item-data-header__text">Upload Invoice</span>
                        </div>
                        @{
                            var rowStage6 = 1;
                        }
                        @foreach (var purchasingDocumentItem in purchasingDocumentItems)
                        {
                            var childPurchasingDocumentItems = pO.PurchasingDocumentItems.Where(x => x.ParentID == purchasingDocumentItem.ID && x.ID != purchasingDocumentItem.ID);
                            var childrowStage6 = 1;

                            var st6ItemID = "st6-item-id";
                            var st6FormUpload = "st6-form-upload";
                            var st6FormUploaded = "st6-form-uploaded";
                            var st6FileInvoice = "st6-file-invoice";
                            var st6FileInvoiceUpload = "st6-file-invoice-upload";
                            var st6FileInvoiceRemove = "st6-file-invoice-remove";
                            var st6FileInvoiceDownload = "st6-file-invoice-download";

                            var disabledFileInvoice = "disabled";
                            var disabledFileInvoiceUpload = "disabled";
                            var hiddenFormUploading = "";
                            var hiddenFormUploaded = "hidden";
                            var hiddenst6FileInvoiceRemove = "";
                            var invoiceDownloadPath = "";

                            if (purchasingDocumentItem.InvoiceDocument != null)
                            {

                                invoiceDownloadPath = Path.Combine("/", iisAppName, "Files/Local/Invoice", purchasingDocumentItem.InvoiceDocument);
                                hiddenFormUploading = "hidden";
                                hiddenFormUploaded = "";

                                if (roleID == "procurement" || roleID == "administrator")
                                {
                                    hiddenst6FileInvoiceRemove = "hidden";
                                }

                            }
                            else
                            {
                                if (roleID == "vendor")
                                {
                                    if (purchasingDocumentItem.ActiveStage != "2a")
                                    {
                                        if (Convert.ToInt32(purchasingDocumentItem.ActiveStage) > 4 && purchasingDocumentItem.LatestPurchasingDocumentItemHistories.GoodsReceiptQuantity >= purchasingDocumentItem.ConfirmedQuantity)
                                        {
                                            disabledFileInvoice = "";
                                            disabledFileInvoiceUpload = "";
                                        }
                                    }
                                }
                            }

                            <div class="po-item-data-content row-@rowStage6">
                                <div class="po-item-data-content__outer">
                                    <div class="po-item-data-header__column">
                                        <input hidden class="@st6ItemID" value="@purchasingDocumentItem.ID" />
                                        <div class="form-inline @st6FormUpload" @hiddenFormUploading>
                                            <div class="form-group mr-2">
                                                <input type="file" id="file" class="form-control with-icon @st6FileInvoice" @disabledFileInvoice>
                                                <i class="fas fa-paperclip form-type-icon"></i>
                                            </div>
                                            <button class="btn btn-positive @st6FileInvoiceUpload" @disabledFileInvoiceUpload>Upload</button>
                                        </div>
                                        <div class="file-uploaded @st6FormUploaded" @hiddenFormUploaded>
                                            <p class="mb-0"> <a class="@st6FileInvoiceDownload" href="@invoiceDownloadPath">Invoice uploaded </a> <i class="fas fa-check-circle success-icon"></i></p>
                                            <a href="#" class="danger-link @st6FileInvoiceRemove" @hiddenst6FileInvoiceRemove>Remove?</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="po-item-data-content__child">
                                    @if (childPurchasingDocumentItems.Count() > 0)
                                    {
                                        foreach (var childPurchasingDocumentItem in childPurchasingDocumentItems)
                                        {
                                            disabledFileInvoice = "disabled";
                                            disabledFileInvoiceUpload = "disabled";
                                            hiddenFormUploading = "";
                                            hiddenFormUploaded = "hidden";
                                            hiddenst6FileInvoiceRemove = "";
                                            invoiceDownloadPath = "";

                                            if (childPurchasingDocumentItem.InvoiceDocument != null)
                                            {
                                                invoiceDownloadPath = Path.Combine("/", iisAppName, "Files/Local/Invoice", childPurchasingDocumentItem.InvoiceDocument);
                                                hiddenFormUploading = "hidden";
                                                hiddenFormUploaded = "";

                                                if (roleID == "procurement" || roleID == "administrator")
                                                {
                                                    hiddenst6FileInvoiceRemove = "hidden";
                                                }
                                            }
                                            else
                                            {
                                                if (roleID == "vendor")
                                                {
                                                    if (childPurchasingDocumentItem.ActiveStage != "2a")
                                                    {
                                                        if (Convert.ToInt32(childPurchasingDocumentItem.ActiveStage) > 4 && childPurchasingDocumentItem.LatestPurchasingDocumentItemHistories.GoodsReceiptQuantity >= childPurchasingDocumentItem.ConfirmedQuantity)
                                                        {
                                                            disabledFileInvoice = "";
                                                            disabledFileInvoiceUpload = "";
                                                        }
                                                    }
                                                }
                                            }
                                            <div class="po-item-data-content row-@rowStage6-@childrowStage6" row="@rowStage6" child="@childrowStage6">
                                                <div class="po-item-data-header__column">
                                                    <input hidden class="@st6ItemID" value="@childPurchasingDocumentItem.ID" />
                                                    <div class="form-inline @st6FormUpload" @hiddenFormUploading>
                                                        <div class="form-group mr-2">
                                                            <input type="file" id="file" class="form-control with-icon @st6FileInvoice" @disabledFileInvoice>
                                                            <i class="fas fa-paperclip form-type-icon"></i>
                                                        </div>
                                                        <button class="btn btn-positive @st6FileInvoiceUpload" @disabledFileInvoiceUpload>Upload</button>
                                                    </div>
                                                    <div class="file-uploaded @st6FormUploaded" @hiddenFormUploaded>
                                                        <p class="mb-0"> <a class="@st6FileInvoiceDownload" href="@invoiceDownloadPath">Invoice uploaded </a> <i class="fas fa-check-circle success-icon"></i></p>
                                                        <a href="#" class="danger-link @st6FileInvoiceRemove" @hiddenst6FileInvoiceRemove>Remove?</a>
                                                    </div>
                                                </div>
                                            </div>
                                            childrowStage6++;
                                        }
                                    }
                                </div>
                            </div>
                            rowStage6++;
                        }
                    </div>
                </div>
                <div class="po-item-section stage-8">
                    <div class="po-item-section-header justify-content-center">
                        <p class="mb-0">Stage 7</p>
                    </div>
                    <div class="po-item-section-body">
                        @{
                            row = 1;
                            var hidden = "";
                            var hiddenPayTerms = "";

                            if (roleID == "vendor")
                            {
                                hiddenPayTerms = "hidden";
                            }
                        }
                        <div class="po-item-data-header">
                            <span class="po-item-data-header__text parking-date">Parking Date</span>
                            <span class="po-item-data-header__text term-date" @hiddenPayTerms>Term Date</span>
                            <span class="po-item-data-header__text posting-date">Posting Date</span>
                        </div>
                        @foreach (var purchasingDocumentItem in purchasingDocumentItems)
                        {
                            var rowChild = 1;
                            //if (purchasingDocumentItem.ActiveStageToNumber < 5 && roleID == "vendor")
                            //{
                            //    hidden = "hidden";
                            //}

                            <div class="po-item-data-content row-@row" row="@row">
                                <div class="po-item-data-content__outer">
                                    <span class="po-item-data-header__column parking-date" @hidden>@purchasingDocumentItem.LatestParkingDateNewFormat</span>
                                    <span class="po-item-data-header__column term-date" @hidden @hiddenPayTerms>@purchasingDocumentItem.LatestTermDateNewFormat</span>
                                    <span class="po-item-data-header__column posting-date" @hidden>@purchasingDocumentItem.LatestPostingDateNewFormat</span>
                                </div>
                                <div class="po-item-data-content__child">
                                    @foreach (var purchasingDocumentItemChild in purchasingDocumentItemChilds.Where(x => x.ParentID == purchasingDocumentItem.ID))
                                    {
                                        hidden = "";
                                        //if (purchasingDocumentItemChild.ActiveStageToNumber < 5 && roleID == "vendor")
                                        //{
                                        //    hidden = "hidden";
                                        //}
                                        <div class="po-item-data-content row-@row-@rowChild mt-customize" row="@row" child="@rowChild">
                                            <span class="po-item-data-header__column parking-date" @hidden>@purchasingDocumentItemChild.LatestParkingDateNewFormat</span>
                                            <span class="po-item-data-header__column term-date" @hidden @hiddenPayTerms>@purchasingDocumentItemChild.LatestTermDateNewFormat</span>
                                            <span class="po-item-data-header__column posting-date" @hidden>@purchasingDocumentItemChild.LatestPostingDateNewFormat</span>
                                        </div>
                                        rowChild++;
                                    }
                                </div>
                            </div>
                            row++;
                        }
                    </div>
                </div>
            </div>
        </li>
    </ul>
    poSignRow++;
}

<input type="text" id="stage1VendorConfirmQuantity" hidden value="@Url.Action("VendorConfirmQuantity", "Local")" />
<input type="text" id="stage1VendorEditItem" hidden value="@Url.Action("VendorEditItem", "Local")" />
<input type="text" id="stage1ProcurementConfirmItem" hidden value="@Url.Action("ProcurementConfirmItem", "Local")" />
<input type="text" id="stage1CancelItem" hidden value="@Url.Action("CancelItem", "Local")" />
<input type="text" id="stage2VendorConfirmFirstETA" hidden value="@Url.Action("VendorConfirmFirstETA", "Local")" />
<input type="text" id="stage2ProcurementAcceptFirstEta" hidden value="@Url.Action("ProcurementAcceptFirstEta", "Local")" />
<input type="text" id="stage2ProcurementDeclineFirstEta" hidden value="@Url.Action("ProcurementDeclineFirstEta", "Local")" />
<input type="text" id="stage2aVendorUploadProformaInvoice" hidden value="@Url.Action("VendorUploadInvoice", "Local")" />
@*<input type="text" id="stage2aVendorSkipPI" hidden value="@Url.Action("VendorSkipPI", "Local")" />
    <input type="text" id="stage3VendorConfirmPaymentReceived" hidden value="@Url.Action("VendorConfirmPaymentReceived", "Local")" />
    <input type="text" id="stage3VendorSkipConfirmPayment" hidden value="@Url.Action("VendorSkipConfirmPayment", "Local")" />*@
<input type="text" id="stage2aVendorUploadAllProformaInvoice" hidden value="@Url.Action("VendorUploadAllProformaInvoice", "Local")" />
<input type="text" id="stage2aVendorRemoveProformaInvoice" hidden value="@Url.Action("VendorRemoveProformaInvoice", "Local")" />
<input type="text" id="stage2aProcurementAskProformaInvoice" hidden value="@Url.Action("ProcurementAskProformaInvoice", "Local")" />
<input type="text" id="stage2aProcurementSkipProformaInvoice" hidden value="@Url.Action("ProcurementSkipProformaInvoice", "Local")" />
<input type="text" id="stage3ProcurementConfirmPaymentReceived" hidden value="@Url.Action("ProcurementConfirmPaymentReceived", "Local")" />
<input type="text" id="stage3ProcurementSkipConfirmPayment" hidden value="@Url.Action("ProcurementSkipConfirmPayment", "Local")" />
<input type="text" id="stage4VendorUpdateETA" hidden value="@Url.Action("VendorUpdateETA", "Local")" />
<input type="text" id="stage4VendorUploadProgressPhotoes" hidden value="@Url.Action("VendorUploadProgressPhotoes", "Local")" />
<input type="text" id="stage6VendorUploadInvoice_2" hidden value="@Url.Action("VendorUploadInvoice_2", "Local")" />
<input type="text" id="stage6VendorRemoveUploadInvoice" hidden value="@Url.Action("VendorRemoveUploadInvoice", "Local")" />

<br />
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
            @Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, searchPOStatus = ViewBag.CurrentSearchPOStatus, searchPONumber = ViewBag.CurrentSearchPONumber, searchVendorName = ViewBag.CurrentSearchVendorName, searchMaterial = ViewBag.CurrentSearchMaterial, filterBy = ViewBag.CurrentSearchFilterBy, searchStartPODate = ViewBag.CurrentStartPODate, searchEndPODate = ViewBag.CurrentEndPODate, searchUserProcurement = ViewBag.CurrentSearchUserProcurement }))
            @section scripts {
                <script src="~/Scripts/datepicker.min.js"></script>
                <script src="~/Scripts/donutty-jquery.min.js"></script>
                <script src="~/Scripts/Local/stage1-procurement.js"></script>
                <script src="~/Scripts/Local/stage1-vendor.js"></script>
                <script src="~/Scripts/Local/stage2-vendor.js"></script>
                <script src="~/Scripts/Local/stage2-procurement.js"></script>
                <script src="~/Scripts/Local/Stage2a-procurement.js"></script>
                <script src="~/Scripts/Local/Stage2a-invoice-vendor.js"></script>
                <script src="~/Scripts/Local/stage3-procurement.js"></script>
                <script src="~/Scripts/Local/stage4-vendor.js"></script>
                <script src="~/Scripts/Local/Stage6-vendor.js"></script>

                <script type="text/javascript">
                    var scrollLength = [];
                    $(document).ready(function () {
                        $('#startPODate').datepicker({ autoHide: true, format: 'dd/mm/yyyy' });
                        $('#endPODate').datepicker({ autoHide: true, format: 'dd/mm/yyyy' }); //, filter: date => { return (new Date($('#startPODate').val()) >= date) ? false : true; } });
                        //$('#InputETAHistory_ETADate').datepicker({ autoHide: true, format: 'dd/mm/yyyy', filter: date => { return (new Date(Date.now()) >= date) ? false : true; } });
                        //$('#InputPurchasingDocumentItem_ConfirmReceivedPaymentDate').datepicker({ autoHide: true, format: 'dd/mm/yyyy' });
                        $('.form-date').datepicker({ autoHide: true, format: 'dd/mm/yyyy' });

                        //$("#searchFilterBy").on("change", function () {
                        //                $("#data-list").empty();
                        //});

                        $("#searchPONumber").on("keyup focus", function () {
                            $.ajax({
                                type: "GET",
                                url: "@Url.Action("GetDataForSearch", "Local")",
                                data: { 'searchFilterBy': 'poNumber', 'value': $("#searchPONumber").val() },
                                beforeSend: function () {
                                    $("#searchPONumber").css("background", "url(" + siteUrl + "/Images/LoaderIcon.gif) no-repeat 165px");
                                },
                                success: function (response) {
                                    if (response.responseCode == "200") {
                                        var jsonObjSuggestion = $.parseJSON(response.data);
                                        var element = "";
                                        for (var k in jsonObjSuggestion) {
                                            element += "<option value='" + jsonObjSuggestion[k]['Data'] + "'></option>";
                                        }
                                        $("#data-list-ponumber").html(element);
                                        $("#searchPONumber").css("background", "");
                                    } else {
                                        console.log(response.responseCode + response.responseText);
                                    }
                                },
                                error: function (xhr, status, error) {
                                    console.log(xhr.status + " : " + error);
                                }
                            });
                        });

                        $("#searchVendorName").on("keyup focus", function () {
                            $.ajax({
                                type: "GET",
                                url: "@Url.Action("GetDataForSearch", "Local")",
                                data: { 'searchFilterBy': 'vendor', 'value': $("#searchVendorName").val() },
                                beforeSend: function () {
                                    $("#searchVendorName").css("background", "url(" + siteUrl + "/Images/LoaderIcon.gif) no-repeat 165px");
                                },
                                success: function (response) {
                                    if (response.responseCode == "200") {
                                        var jsonObjSuggestion = $.parseJSON(response.data);
                                        var element = "";
                                        for (var k in jsonObjSuggestion) {
                                            element += "<option value='" + jsonObjSuggestion[k]['Data'] + "'></option>";
                                        }
                                        $("#data-list-vendorname").html(element);
                                        $("#searchVendorName").css("background", "");
                                    } else {
                                        console.log(response.responseCode + response.responseText);
                                    }
                                },
                                error: function (xhr, status, error) {
                                    console.log(xhr.status + " : " + error);
                                }
                            });
                        });

                        $("#searchMaterial").on("keyup focus", function () {
                            $.ajax({
                                type: "GET",
                                url: "@Url.Action("GetDataForSearch", "Local")",
                                data: { 'searchFilterBy': 'material', 'value': $("#searchMaterial").val() },
                                beforeSend: function () {
                                    $("#searchMaterial").css("background", "url(" + siteUrl + "/Images/LoaderIcon.gif) no-repeat 165px");
                                },
                                success: function (response) {
                                    if (response.responseCode == "200") {
                                        var jsonObjSuggestion = $.parseJSON(response.data);
                                        var element = "";
                                        for (var k in jsonObjSuggestion) {
                                            element += "<option value='" + jsonObjSuggestion[k]['Data'] + "'></option>";
                                        }
                                        $("#data-list-material").html(element);
                                        $("#searchMaterial").css("background", "");
                                    } else {
                                        console.log(response.responseCode + response.responseText);
                                    }
                                },
                                error: function (xhr, status, error) {
                                    console.log(xhr.status + " : " + error);
                                }
                            });
                        });

                        $("#searchUserProcurement").on("keyup focus", function () {
                            $.ajax({
                                type: "GET",
                                url: "@Url.Action("GetDataForSearch", "Local")",
                                data: { 'searchFilterBy': 'userProcurement', 'value': $("#searchUserProcurement").val() },
                                beforeSend: function () {
                                    $("#searchUserProcurement").css("background", "url(" + siteUrl + "/Images/LoaderIcon.gif) no-repeat 165px");
                                },
                                success: function (response) {
                                    if (response.responseCode == "200") {
                                        var jsonObjSuggestion = $.parseJSON(response.data);
                                        var element = "";
                                        for (var k in jsonObjSuggestion) {
                                            element += "<option value='" + jsonObjSuggestion[k]['Data'] + "'></option>";
                                        }
                                        $("#data-list-userprocurement").html(element);
                                        $("#searchUserProcurement").css("background", "");
                                    } else {
                                        console.log(response.responseCode + response.responseText);
                                    }
                                },
                                error: function (xhr, status, error) {
                                    console.log(xhr.status + " : " + error);
                                }
                            });
                        });

                        //stage scrollbar fixed
                        var chooseStagePosition = $('.filter-row').offset();

                        if ($(window).width() > 654) {
                            $(".main-container").scroll(function () {
                                if ($(".main-container").scrollTop() > chooseStagePosition.top) {
                                    $('.filter-row').addClass("freeze");
                                } else {
                                    $('.filter-row').removeClass("freeze");
                                }
                            });
                        }
                        else { }

                        var tempArray = [];
                        var tempMaxHeight = 0;
                        var tempMaxWidth = 0;


                        $(".po-item-container").each(function (index) {
                            var rowExist = 1;

                            while (rowExist > 0) {
                                if ($(this).find(".row-" + rowExist).length > 0) {
                                    tempArray = [];
                                    tempMaxHeight = 0;
                                    $(this).find(".row-" + rowExist).each(function () {
                                        tempArray.push($(this).height());
                                    });
                                    tempMaxHeight = Math.max(...tempArray);
                                    $(this).find(".row-" + rowExist).height(tempMaxHeight);
                                    rowExist++;
                                } else {
                                    rowExist = -1;
                                }
                            }
                        });

                        var outHeightArray = [];
                        var tempOuterHeight = 0;
                        $(".po-item-container").each(function () {
                            var ptr = 1;

                            while (ptr > 0) {
                                if ($(this).find(".row-" + ptr).length > 0) {
                                    outHeightArray = [];
                                    $(this).find(".po-item-data-content__outer").each(function () {
                                        outHeightArray.push($(this).height());
                                    });
                                    tempOuterHeight = Math.max(...outHeightArray);
                                    $(this).find(".row-" + ptr).find(".po-item-data-content__outer").height(tempOuterHeight);
                                    ptr++;
                                } else {
                                    ptr = -1;
                                }
                            }
                        })

                        tempArray = [];
                        $(".po-item-section.information").each(function () {
                            tempArray.push($(this).outerWidth(true));
                        });
                        tempMaxWidth = Math.max(...tempArray);
                        $(".po-item-section.information").width(tempMaxWidth);
                        scrollLength.push(tempMaxWidth + 1.5);

                        for (var i = 1; i <= 8; i++) {
                            tempArray = [];
                            $(".po-item-section.stage-" + i).each(function () {
                                tempArray.push($(this).outerWidth(true));
                            });
                            tempMaxWidth = Math.max(...tempArray);
                            $(".po-item-section.stage-" + i).width(tempMaxWidth);
                            scrollLength.push(tempMaxWidth + 1.5);
                        }

                        var totalDistance = 0;
                        for (var i = 0; i < scrollLength.length; i++) {
                            scrollLength[i] += totalDistance;
                            totalDistance = scrollLength[i];
                        }

                        //for (var i = 1; i < 11; i++) {
                        //    var lastStatus = 0;
                        //    $('.activeStagePo-' + i).each(function (index) {
                        //        if (this.id > lastStatus) {
                        //            lastStatus = this.id;
                        //        }
                        //    });
                        //    console.log(lastStatus);
                        //    if (lastStatus > 0) {
                        //        $(".po-sign-row-" + i).animate({ scrollLeft: scrollLength[lastStatus - 1] }, 500);
                        //    }
                        //}

                        var count = 1;
                        // Every PO to Active Stage
                        $(".po-item-container").each(function (index) {
                            var activeStages = [];
                            $(this).find(".po-item-section.po-item-sticky .po-item-section-body .po-item-data-content").each(function (index) {
                                var findID = "#activeStagePo-" + count;
                                var textStage = $(this).find(findID).first().text();
                                if (textStage != "") {
                                    if (textStage === "2a") {
                                        textStage = 3;
                                    }
                                    else if (textStage >= 3) {
                                        textStage = parseInt(textStage) + 1;
                                    }
                                    else {
                                        textStage = parseInt(textStage);
                                    }

                                    activeStages.push(textStage);
                                }
                            });

                            activeStages.sort();
                            findID = ".po-sign-row-" + count;
                            var biggestActiveStages = activeStages[activeStages.length - 1];
                            console.log("ini" + biggestActiveStages);
                            $(this).find(findID).animate({ scrollLeft: scrollLength[biggestActiveStages - 1] }, 500);
                            count++;
                        });

                        $(".info-stage .pop-up-notification img").hover(function () {
                            var height = $(this).prop('naturalHeight');
                            var width = $(this).prop('naturalWidth');
                            var heightScale = height / 150.0;
                            if (heightScale < 1) {
                                heightScale = 1;
                            }
                            var widthScale = width / 150.0;
                            if (widthScale < 1) {
                                widthScale = 1;
                            }
                            var scale = "scale(" + widthScale + "," + heightScale + ")";
                            $(this).css({
                                "-ms-transform": scale,
                                "-webkit-transform": scale,
                                "transform": scale
                            });
                        }, function () {
                            $(this).css({
                                "-ms-transform": "unset",
                                "-webkit-transform": "unset",
                                "transform": "unset"
                            });
                        });

                    });



                    function paginationShow(destination) {
                        $(".po-item-scrollable").animate({ scrollLeft: scrollLength[destination - 1] }, 500);
                    }

                    function poItemCollapse(row) {
                        row.closest("li").toggleClass("collapse-row");
                    }
                    ///////////////////////////////////////////////////////////////////////////////
                    function reverseDayMonth(monthDayYearDate) {
                        var dateParts = monthDayYearDate.split("/");
                        return new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);
                    }

                    // Fill Delay Reason with selected value

                    $(".st4-delay-reason").each(function (index) {
                        var delayReasonID = $(this).attr("value");

                        $(this).get(0).selectedIndex = delayReasonID;
                    });

                </script>
            }
